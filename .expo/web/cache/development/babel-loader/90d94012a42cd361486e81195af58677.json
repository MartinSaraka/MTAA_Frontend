{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, createRef } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar RegisterPage = function RegisterPage(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      userName = _useState2[0],\n      setUserName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userEmail = _useState4[0],\n      setUserEmail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      userPassword = _useState6[0],\n      setUserPassword = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      errortext = _useState8[0],\n      setErrortext = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      isRegistraionSuccess = _useState10[0],\n      setIsRegistraionSuccess = _useState10[1];\n\n  var userId = route.params.userId;\n  var userToken = route.params.userToken;\n  console.log(route);\n  var emailInputRef = createRef();\n  var passwordInputRef = createRef();\n\n  var handleSubmitButton = function handleSubmitButton() {\n    setErrortext('');\n\n    if (!userName) {\n      alert('Zadajte meno');\n      return;\n    }\n\n    if (!userEmail) {\n      alert('Zadajte E-mail');\n      return;\n    }\n\n    if (!userPassword) {\n      alert('Please fill Password');\n      return;\n    }\n\n    var dataToSend = {\n      name: userName,\n      email: userEmail,\n      password: userPassword\n    };\n    var formBody = [];\n\n    for (var key in dataToSend) {\n      var encodedKey = encodeURIComponent(key);\n      var encodedValue = encodeURIComponent(dataToSend[key]);\n      formBody.push(encodedKey + '=' + encodedValue);\n    }\n\n    formBody = formBody.join('&');\n    fetch('http://localhost:3000/api/user/register', {\n      method: 'POST',\n      body: formBody,\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      console.log(responseJson);\n\n      if (responseJson.status === 'success') {\n        setIsRegistraionSuccess(true);\n        console.log('Úspešná registrácia. Prihláste sa prosím');\n      } else {\n        setErrortext(responseJson.msg);\n      }\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n\n  if (isRegistraionSuccess) {\n    return _jsxs(View, {\n      style: {\n        flex: 1,\n        backgroundColor: '#307ecc',\n        justifyContent: 'center'\n      },\n      children: [_jsx(Text, {\n        style: styles.successTextStyle,\n        children: \"\\xDAspe\\u0161n\\xE1 registr\\xE1cua\"\n      }), _jsx(TouchableOpacity, {\n        style: styles.buttonStyle,\n        activeOpacity: 0.5,\n        onPress: function onPress() {\n          return props.navigation.navigate('LoginScreen');\n        },\n        children: _jsx(Text, {\n          style: styles.buttonTextStyle,\n          children: \"Login Now\"\n        })\n      })]\n    });\n  }\n\n  return _jsx(View, {\n    style: {\n      flex: 1\n    },\n    children: _jsx(ImageBackground, {\n      source: require(\"../assets/images/registerPhoto.png\"),\n      resizeMode: \"cover\",\n      style: styles.image2,\n      imageStyle: styles.image2_imageStyle,\n      children: _jsxs(ScrollView, {\n        keyboardShouldPersistTaps: \"handled\",\n        contentContainerStyle: {\n          flex: 1,\n          justifyContent: 'center',\n          alignContent: 'center'\n        },\n        children: [_jsx(View, {\n          style: {\n            alignItems: 'center'\n          }\n        }), _jsxs(KeyboardAvoidingView, {\n          enabled: true,\n          children: [_jsx(View, {\n            style: styles.SectionStyle,\n            children: _jsx(TextInput, {\n              style: styles.inputStyle,\n              onChangeText: function onChangeText(UserName) {\n                return setUserName(UserName);\n              },\n              underlineColorAndroid: \"#f000\",\n              placeholder: \"Zadajte Meno\",\n              placeholderTextColor: \"#8b9cb5\",\n              autoCapitalize: \"sentences\",\n              returnKeyType: \"next\",\n              onSubmitEditing: function onSubmitEditing() {\n                return emailInputRef.current && emailInputRef.current.focus();\n              },\n              blurOnSubmit: false\n            })\n          }), _jsx(View, {\n            style: styles.SectionStyle,\n            children: _jsx(TextInput, {\n              style: styles.inputStyle,\n              onChangeText: function onChangeText(UserEmail) {\n                return setUserEmail(UserEmail);\n              },\n              underlineColorAndroid: \"#f000\",\n              placeholder: \"Zadajte E-mail\",\n              placeholderTextColor: \"#8b9cb5\",\n              keyboardType: \"email-address\",\n              ref: emailInputRef,\n              returnKeyType: \"next\",\n              onSubmitEditing: function onSubmitEditing() {\n                return passwordInputRef.current && passwordInputRef.current.focus();\n              },\n              blurOnSubmit: false\n            })\n          }), _jsx(View, {\n            style: styles.SectionStyle,\n            children: _jsx(TextInput, {\n              style: styles.inputStyle,\n              onChangeText: function onChangeText(UserPassword) {\n                return setUserPassword(UserPassword);\n              },\n              underlineColorAndroid: \"#f000\",\n              placeholder: \"Zadajte Heslo\",\n              placeholderTextColor: \"#8b9cb5\",\n              ref: passwordInputRef,\n              returnKeyType: \"next\",\n              secureTextEntry: true,\n              onSubmitEditing: Keyboard.dismiss,\n              blurOnSubmit: false\n            })\n          }), errortext != '' ? _jsx(Text, {\n            style: styles.errorTextStyle,\n            children: errortext\n          }) : null, _jsx(TouchableOpacity, {\n            style: styles.buttonStyle,\n            activeOpacity: 0.5,\n            onPress: function onPress() {\n              return navigation.navigate('DrawerNavigationPage');\n            },\n            children: _jsx(Text, {\n              style: styles.buttonTextStyle,\n              children: \"Zaregistruj sa\"\n            })\n          })]\n        })]\n      })\n    })\n  });\n};\n\nexport default RegisterPage;\nvar styles = StyleSheet.create({\n  SectionStyle: {\n    flexDirection: 'row',\n    height: 40,\n    marginTop: 20,\n    marginLeft: 35,\n    marginRight: 35,\n    margin: 10\n  },\n  buttonStyle: {\n    backgroundColor: '#7DE24E',\n    borderWidth: 0,\n    color: '#FFFFFF',\n    borderColor: '#7DE24E',\n    height: 40,\n    alignItems: 'center',\n    borderRadius: 30,\n    marginLeft: 35,\n    marginRight: 35,\n    marginTop: 20,\n    marginBottom: 20\n  },\n  buttonTextStyle: {\n    color: '#FFFFFF',\n    paddingVertical: 10,\n    fontSize: 16\n  },\n  inputStyle: {\n    flex: 1,\n    color: 'white',\n    paddingLeft: 15,\n    paddingRight: 15,\n    borderWidth: 1,\n    borderRadius: 30,\n    borderColor: '#dadae8'\n  },\n  image2: {\n    flex: 1,\n    justifyContent: \"center\"\n  },\n  errorTextStyle: {\n    color: 'red',\n    textAlign: 'center',\n    fontSize: 14\n  },\n  successTextStyle: {\n    color: 'white',\n    textAlign: 'center',\n    fontSize: 18,\n    padding: 30\n  }\n});","map":{"version":3,"sources":["C:/Users/sacre/AwesomeProject/src/screens/RegisterPage.js"],"names":["React","useState","createRef","RegisterPage","route","navigation","userName","setUserName","userEmail","setUserEmail","userPassword","setUserPassword","errortext","setErrortext","isRegistraionSuccess","setIsRegistraionSuccess","userId","params","userToken","console","log","emailInputRef","passwordInputRef","handleSubmitButton","alert","dataToSend","name","email","password","formBody","key","encodedKey","encodeURIComponent","encodedValue","push","join","fetch","method","body","headers","then","response","json","responseJson","status","msg","catch","error","flex","backgroundColor","justifyContent","styles","successTextStyle","buttonStyle","props","navigate","buttonTextStyle","require","image2","image2_imageStyle","alignContent","alignItems","SectionStyle","inputStyle","UserName","current","focus","UserEmail","UserPassword","Keyboard","dismiss","errorTextStyle","StyleSheet","create","flexDirection","height","marginTop","marginLeft","marginRight","margin","borderWidth","color","borderColor","borderRadius","marginBottom","paddingVertical","fontSize","paddingLeft","paddingRight","textAlign","padding"],"mappings":"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","sourcesContent":["\r\nimport React, {useState, createRef} from 'react';\r\nimport {\r\n  StyleSheet,\r\n  TextInput,\r\n  View,\r\n  Text,\r\n  Image,\r\n  KeyboardAvoidingView,\r\n  Keyboard,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  ImageBackground\r\n} from 'react-native';\r\n\r\n\r\n\r\n  const RegisterPage = ({route,navigation}) =>  {\r\n  const [userName, setUserName] = useState('');\r\n  const [userEmail, setUserEmail] = useState('');\r\n  const [userPassword, setUserPassword] = useState('');\r\n  const [errortext, setErrortext] = useState('');\r\n  const [\r\n    isRegistraionSuccess,\r\n    setIsRegistraionSuccess\r\n  ] = useState(false);\r\n  const { userId } = route.params;\r\n  const { userToken } = route.params;\r\n  console.log(route)\r\n  const emailInputRef = createRef();\r\n  const passwordInputRef = createRef();\r\n\r\n  const handleSubmitButton = () => {\r\n    setErrortext('');\r\n    if (!userName) {\r\n      alert('Zadajte meno');\r\n      return;\r\n    }\r\n    if (!userEmail) {\r\n      alert('Zadajte E-mail');\r\n      return;\r\n    }\r\n    if (!userPassword) {\r\n      alert('Please fill Password');\r\n      return;\r\n    }\r\n\r\n   \r\n    var dataToSend = {\r\n      name: userName,\r\n      email: userEmail,\r\n      password: userPassword,\r\n    };\r\n    var formBody = [];\r\n    for (var key in dataToSend) {\r\n      var encodedKey = encodeURIComponent(key);\r\n      var encodedValue = encodeURIComponent(dataToSend[key]);\r\n      formBody.push(encodedKey + '=' + encodedValue);\r\n    }\r\n    formBody = formBody.join('&');\r\n\r\n    fetch('http://localhost:3000/api/user/register', {\r\n      method: 'POST',\r\n      body: formBody,\r\n      headers: {\r\n        //Header Defination\r\n        'Content-Type':\r\n        'application/x-www-form-urlencoded;charset=UTF-8',\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((responseJson) => {\r\n        \r\n        console.log(responseJson);\r\n        // If server response message same as Data Matched\r\n        if (responseJson.status === 'success') {\r\n          setIsRegistraionSuccess(true);\r\n          console.log(\r\n            'Úspešná registrácia. Prihláste sa prosím'\r\n          );\r\n        } else {\r\n          setErrortext(responseJson.msg);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        \r\n        console.error(error);\r\n      });\r\n  };\r\n  if (isRegistraionSuccess) {\r\n    return (\r\n      <View\r\n        style={{\r\n          flex: 1,\r\n          backgroundColor: '#307ecc',\r\n          justifyContent: 'center',\r\n        }}>\r\n        \r\n        <Text style={styles.successTextStyle}>\r\n          Úspešná registrácua\r\n        </Text>\r\n        <TouchableOpacity\r\n          style={styles.buttonStyle}\r\n          activeOpacity={0.5}\r\n          onPress={() => props.navigation.navigate('LoginScreen')}>\r\n          <Text style={styles.buttonTextStyle}>Login Now</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    );\r\n  }\r\n  return (\r\n    <View style={{flex: 1}}>\r\n      <ImageBackground\r\n          \r\n          source={require(\"../assets/images/registerPhoto.png\")}\r\n          resizeMode=\"cover\"\r\n          style={styles.image2}\r\n          imageStyle={styles.image2_imageStyle}\r\n        >\r\n      <ScrollView\r\n        keyboardShouldPersistTaps=\"handled\"\r\n        contentContainerStyle={{\r\n          flex:1,\r\n          justifyContent: 'center',\r\n          alignContent: 'center',\r\n        }}>\r\n        <View style={{alignItems: 'center'}}>\r\n          \r\n        </View>\r\n        <KeyboardAvoidingView enabled>\r\n          <View style={styles.SectionStyle}>\r\n            <TextInput\r\n              style={styles.inputStyle}\r\n              onChangeText={(UserName) => setUserName(UserName)}\r\n              underlineColorAndroid=\"#f000\"\r\n              placeholder=\"Zadajte Meno\"\r\n              placeholderTextColor=\"#8b9cb5\"\r\n              autoCapitalize=\"sentences\"\r\n              returnKeyType=\"next\"\r\n              onSubmitEditing={() =>\r\n                emailInputRef.current && emailInputRef.current.focus()\r\n              }\r\n              blurOnSubmit={false}\r\n            />\r\n          </View>\r\n          <View style={styles.SectionStyle}>\r\n            <TextInput\r\n              style={styles.inputStyle}\r\n              onChangeText={(UserEmail) => setUserEmail(UserEmail)}\r\n              underlineColorAndroid=\"#f000\"\r\n              placeholder=\"Zadajte E-mail\"\r\n              placeholderTextColor=\"#8b9cb5\"\r\n              keyboardType=\"email-address\"\r\n              ref={emailInputRef}\r\n              returnKeyType=\"next\"\r\n              onSubmitEditing={() =>\r\n                passwordInputRef.current &&\r\n                passwordInputRef.current.focus()\r\n              }\r\n              blurOnSubmit={false}\r\n            />\r\n          </View>\r\n          <View style={styles.SectionStyle}>\r\n            <TextInput\r\n              style={styles.inputStyle}\r\n              onChangeText={(UserPassword) =>\r\n                setUserPassword(UserPassword)\r\n              }\r\n              underlineColorAndroid=\"#f000\"\r\n              placeholder=\"Zadajte Heslo\"\r\n              placeholderTextColor=\"#8b9cb5\"\r\n              ref={passwordInputRef}\r\n              returnKeyType=\"next\"\r\n              secureTextEntry={true}\r\n              onSubmitEditing={Keyboard.dismiss}\r\n              blurOnSubmit={false}\r\n            />\r\n          </View>\r\n          \r\n          {errortext != '' ? (\r\n            <Text style={styles.errorTextStyle}>\r\n              {errortext}\r\n            </Text>\r\n          ) : null}\r\n          <TouchableOpacity\r\n            style={styles.buttonStyle}\r\n            activeOpacity={0.5}\r\n            onPress={() => navigation.navigate('DrawerNavigationPage')}\r\n            >\r\n            <Text style={styles.buttonTextStyle}>Zaregistruj sa</Text>\r\n          </TouchableOpacity>\r\n        </KeyboardAvoidingView>\r\n      </ScrollView>\r\n      </ImageBackground>\r\n    </View>\r\n  );\r\n};\r\nexport default RegisterPage;\r\n\r\nconst styles = StyleSheet.create({\r\n  SectionStyle: {\r\n    flexDirection: 'row',\r\n    height: 40,\r\n    marginTop: 20,\r\n    marginLeft: 35,\r\n    marginRight: 35,\r\n    margin: 10,\r\n  },\r\n  buttonStyle: {\r\n    backgroundColor: '#7DE24E',\r\n    borderWidth: 0,\r\n    color: '#FFFFFF',\r\n    borderColor: '#7DE24E',\r\n    height: 40,\r\n    alignItems: 'center',\r\n    borderRadius: 30,\r\n    marginLeft: 35,\r\n    marginRight: 35,\r\n    marginTop: 20,\r\n    marginBottom: 20,\r\n  },\r\n  buttonTextStyle: {\r\n    color: '#FFFFFF',\r\n    paddingVertical: 10,\r\n    fontSize: 16,\r\n  },\r\n  inputStyle: {\r\n    flex: 1,\r\n    color: 'white',\r\n    paddingLeft: 15,\r\n    paddingRight: 15,\r\n    borderWidth: 1,\r\n    borderRadius: 30,\r\n    borderColor: '#dadae8',\r\n  },\r\n  image2: {\r\n    flex: 1,\r\n    justifyContent: \"center\"\r\n  },\r\n  errorTextStyle: {\r\n    color: 'red',\r\n    textAlign: 'center',\r\n    fontSize: 14,\r\n  },\r\n  successTextStyle: {\r\n    color: 'white',\r\n    textAlign: 'center',\r\n    fontSize: 18,\r\n    padding: 30,\r\n  },\r\n});"]},"metadata":{},"sourceType":"module"}
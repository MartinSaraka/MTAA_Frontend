{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useState } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { mediaDevices, RTCView } from \"react-native-webrtc\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction webrtc_test() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      stream = _useState2[0],\n      setStream = _useState2[1];\n\n  var start = function start() {\n    var s;\n    return _regeneratorRuntime.async(function start$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(\"start\");\n\n            if (stream) {\n              _context.next = 12;\n              break;\n            }\n\n            _context.prev = 2;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(mediaDevices.getUserMedia({\n              video: true\n            }));\n\n          case 5:\n            s = _context.sent;\n            setStream(s);\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](2);\n            console.error(_context.t0);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[2, 9]], Promise);\n  };\n\n  var stop = function stop() {\n    console.log(\"stop\");\n\n    if (stream) {\n      stream.release();\n      setStream(null);\n    }\n  };\n\n  return _jsxs(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    children: [_jsx(StatusBar, {\n      barStyle: \"dark-content\"\n    }), _jsx(View, {\n      style: {\n        flex: 1\n      },\n      children: stream && _jsx(RTCView, {\n        streamURL: stream.toURL(),\n        style: {\n          flex: 1\n        }\n      })\n    }), _jsxs(View, {\n      style: {\n        flexDirection: \"row\",\n        justifyContent: \"space-around\"\n      },\n      children: [_jsx(Button, {\n        title: \"Start\",\n        onPress: start\n      }), _jsx(Button, {\n        title: \"Stop\",\n        onPress: stop\n      })]\n    })]\n  });\n}\n\nexport default webrtc_test;","map":{"version":3,"sources":["/Users/timotejsmolen/WebstormProjects/untitled2/src/screens/webrtc_test.js"],"names":["useState","mediaDevices","RTCView","webrtc_test","stream","setStream","start","console","log","getUserMedia","video","s","error","stop","release","flex","toURL","flexDirection","justifyContent"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;;;;AAQA,SAASC,YAAT,EAAuBC,OAAvB,QAAsC,qBAAtC;;;;AAEA,SAASC,WAAT,GAAuB;AACnB,kBAA4BH,QAAQ,CAAC,IAAD,CAApC;AAAA;AAAA,MAAOI,MAAP;AAAA,MAAeC,SAAf;;AAEA,MAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AACVC,YAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;;AADU,gBAELJ,MAFK;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,6CAKQH,YAAY,CAACQ,YAAb,CAA0B;AAAEC,cAAAA,KAAK,EAAE;AAAT,aAA1B,CALR;;AAAA;AAKFC,YAAAA,CALE;AAMFN,YAAAA,SAAS,CAACM,CAAD,CAAT;AANE;AAAA;;AAAA;AAAA;AAAA;AAQFJ,YAAAA,OAAO,CAACK,KAAR;;AARE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAd;;AAaA,MAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACfN,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;;AACA,QAAIJ,MAAJ,EAAY;AACRA,MAAAA,MAAM,CAACU,OAAP;AACAT,MAAAA,SAAS,CAAC,IAAD,CAAT;AACH;AACJ,GAND;;AAQA,SACI,MAAC,YAAD;AAAc,IAAA,KAAK,EAAE;AAAEU,MAAAA,IAAI,EAAE;AAAR,KAArB;AAAA,eACI,KAAC,SAAD;AAAW,MAAA,QAAQ,EAAC;AAApB,MADJ,EAEI,KAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAAb;AAAA,gBACKX,MAAM,IAAI,KAAC,OAAD;AAAS,QAAA,SAAS,EAAEA,MAAM,CAACY,KAAP,EAApB;AAAoC,QAAA,KAAK,EAAE;AAAED,UAAAA,IAAI,EAAE;AAAR;AAA3C;AADf,MAFJ,EAKI,MAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEE,QAAAA,aAAa,EAAE,KAAjB;AAAwBC,QAAAA,cAAc,EAAE;AAAxC,OAAb;AAAA,iBACI,KAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,OAAd;AAAsB,QAAA,OAAO,EAAEZ;AAA/B,QADJ,EAEI,KAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAqB,QAAA,OAAO,EAAEO;AAA9B,QAFJ;AAAA,MALJ;AAAA,IADJ;AAYH;;AAED,eAAeV,WAAf","sourcesContent":["import { useState } from \"react\";\nimport {\n    Button,\n    SafeAreaView,\n    StatusBar,\n    StyleSheet,\n    View,\n} from \"react-native\";\nimport { mediaDevices, RTCView } from \"react-native-webrtc\";\n\nfunction webrtc_test() {\n    const [stream, setStream] = useState(null);\n\n    const start = async () => {\n        console.log(\"start\");\n        if (!stream) {\n            let s;\n            try {\n                s = await mediaDevices.getUserMedia({ video: true });\n                setStream(s);\n            } catch (e) {\n                console.error(e);\n            }\n        }\n    };\n\n    const stop = () => {\n        console.log(\"stop\");\n        if (stream) {\n            stream.release();\n            setStream(null);\n        }\n    };\n\n    return (\n        <SafeAreaView style={{ flex: 1 }}>\n            <StatusBar barStyle=\"dark-content\" />\n            <View style={{ flex: 1 }}>\n                {stream && <RTCView streamURL={stream.toURL()} style={{ flex: 1 }} />}\n            </View>\n            <View style={{ flexDirection: \"row\", justifyContent: \"space-around\" }}>\n                <Button title=\"Start\" onPress={start} />\n                <Button title=\"Stop\" onPress={stop} />\n            </View>\n        </SafeAreaView>\n    );\n}\n\nexport default webrtc_test;\n"]},"metadata":{},"sourceType":"module"}
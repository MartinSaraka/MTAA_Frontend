{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, createRef } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar LoginPage = function LoginPage(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      userName = _useState2[0],\n      setUserName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userPassword = _useState4[0],\n      setUserPassword = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      errortext = _useState8[0],\n      setErrortext = _useState8[1];\n\n  var passwordInputRef = createRef();\n\n  var handleSubmitPress = function handleSubmitPress() {\n    setErrortext('');\n\n    if (!userName) {\n      alert('Zadajte Meno');\n      return;\n    }\n\n    if (!userPassword) {\n      alert('Zadajte Heslo');\n      return;\n    }\n\n    setLoading(true);\n    var dataToSend = {\n      name: userName,\n      password: userPassword\n    };\n    var formBody = [];\n\n    for (var key in dataToSend) {\n      var encodedKey = encodeURIComponent(key);\n      var encodedValue = encodeURIComponent(dataToSend[key]);\n      formBody.push(encodedKey + '=' + encodedValue);\n    }\n\n    formBody = formBody.join('&');\n    fetch('http://127.0.0.1:8000/user/login', {\n      method: 'POST',\n      body: JSON.stringify({\n        user: 7,\n        training: item.id\n      }),\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      setLoading(false);\n      console.log(responseJson);\n\n      if (responseJson.status === 'success') {\n        console.log(responseJson.data.name);\n        navigation.replace('DrawerNavigationRoutes');\n      } else {\n        setErrortext(responseJson.msg);\n        console.log('Skontrolujte si svoje Meno a heslo');\n      }\n    }).catch(function (error) {\n      setLoading(false);\n      console.error(error);\n    });\n  };\n\n  return _jsx(View, {\n    style: styles.mainBody,\n    children: _jsx(ImageBackground, {\n      source: require(\"../assets/images/loginPhoto.png\"),\n      resizeMode: \"cover\",\n      style: styles.image2,\n      imageStyle: styles.image2_imageStyle,\n      children: _jsx(ScrollView, {\n        keyboardShouldPersistTaps: \"handled\",\n        contentContainerStyle: {\n          flex: 1,\n          justifyContent: 'center',\n          alignContent: 'center'\n        },\n        children: _jsx(View, {\n          children: _jsxs(KeyboardAvoidingView, {\n            enabled: true,\n            children: [_jsx(View, {\n              style: {\n                alignItems: 'center'\n              }\n            }), _jsx(View, {\n              style: styles.SectionStyle,\n              children: _jsx(TextInput, {\n                style: styles.inputStyle,\n                onChangeText: function onChangeText(UserEmail) {\n                  return setUserEmail(UserEmail);\n                },\n                placeholder: \"Zadajte E-mail\",\n                placeholderTextColor: \"#8b9cb5\",\n                autoCapitalize: \"none\",\n                keyboardType: \"email-address\",\n                returnKeyType: \"next\",\n                onSubmitEditing: function onSubmitEditing() {\n                  return passwordInputRef.current && passwordInputRef.current.focus();\n                },\n                underlineColorAndroid: \"#f000\",\n                blurOnSubmit: false\n              })\n            }), _jsx(View, {\n              style: styles.SectionStyle,\n              children: _jsx(TextInput, {\n                style: styles.inputStyle,\n                onChangeText: function onChangeText(UserPassword) {\n                  return setUserPassword(UserPassword);\n                },\n                placeholder: \"Zadajte Heslo\",\n                placeholderTextColor: \"#8b9cb5\",\n                keyboardType: \"default\",\n                ref: passwordInputRef,\n                onSubmitEditing: Keyboard.dismiss,\n                blurOnSubmit: false,\n                secureTextEntry: true,\n                underlineColorAndroid: \"#f000\",\n                returnKeyType: \"next\"\n              })\n            }), errortext != '' ? _jsx(Text, {\n              style: styles.errorTextStyle,\n              children: errortext\n            }) : null, _jsx(TouchableOpacity, {\n              style: styles.buttonStyle,\n              activeOpacity: 0.5,\n              onPress: handleSubmitPress,\n              children: _jsx(Text, {\n                style: styles.buttonTextStyle,\n                children: \"Prihl\\xE1si\\u0165 sa\"\n              })\n            }), _jsx(Text, {\n              style: styles.registerTextStyle,\n              onPress: function onPress() {\n                return navigation.navigate('RegisterPage');\n              },\n              children: \"Nem\\xE1\\u0161 e\\u0161te \\xFA\\u010Det ?\"\n            })]\n          })\n        })\n      })\n    })\n  });\n};\n\nexport default LoginPage;\nvar styles = StyleSheet.create({\n  mainBody: {\n    flex: 1\n  },\n  SectionStyle: {\n    flexDirection: 'row',\n    height: 40,\n    marginTop: 20,\n    marginLeft: 35,\n    marginRight: 35,\n    margin: 10\n  },\n  buttonStyle: {\n    backgroundColor: '#7DE24E',\n    borderWidth: 0,\n    color: '#FFFFFF',\n    borderColor: '#7DE24E',\n    height: 40,\n    alignItems: 'center',\n    borderRadius: 30,\n    marginLeft: 35,\n    marginRight: 35,\n    marginTop: 20,\n    marginBottom: 25\n  },\n  buttonTextStyle: {\n    color: '#FFFFFF',\n    paddingVertical: 10,\n    fontSize: 16\n  },\n  inputStyle: {\n    flex: 1,\n    color: 'white',\n    paddingLeft: 15,\n    paddingRight: 15,\n    borderWidth: 1,\n    borderRadius: 30,\n    borderColor: '#dadae8'\n  },\n  registerTextStyle: {\n    color: '#FFFFFF',\n    textAlign: 'center',\n    fontWeight: 'bold',\n    fontSize: 14,\n    alignSelf: 'center',\n    padding: 10\n  },\n  image2: {\n    flex: 1,\n    justifyContent: \"center\"\n  },\n  errorTextStyle: {\n    color: 'red',\n    textAlign: 'center',\n    fontSize: 14\n  }\n});","map":{"version":3,"sources":["C:/Users/sacre/AwesomeProject/src/screens/LoginPage.js"],"names":["React","useState","createRef","LoginPage","navigation","userName","setUserName","userPassword","setUserPassword","loading","setLoading","errortext","setErrortext","passwordInputRef","handleSubmitPress","alert","dataToSend","name","password","formBody","key","encodedKey","encodeURIComponent","encodedValue","push","join","fetch","method","body","JSON","stringify","user","training","item","id","headers","Accept","then","response","json","responseJson","console","log","status","data","replace","msg","catch","error","styles","mainBody","require","image2","image2_imageStyle","flex","justifyContent","alignContent","alignItems","SectionStyle","inputStyle","UserEmail","setUserEmail","current","focus","UserPassword","Keyboard","dismiss","errorTextStyle","buttonStyle","buttonTextStyle","registerTextStyle","navigate","StyleSheet","create","flexDirection","height","marginTop","marginLeft","marginRight","margin","backgroundColor","borderWidth","color","borderColor","borderRadius","marginBottom","paddingVertical","fontSize","paddingLeft","paddingRight","textAlign","fontWeight","alignSelf","padding"],"mappings":"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","sourcesContent":["import React, {useState, createRef} from 'react';\r\nimport {\r\n  StyleSheet,\r\n  TextInput,\r\n  View,\r\n  Text,\r\n  ScrollView,\r\n  Image,\r\n  Keyboard,\r\n  TouchableOpacity,\r\n  KeyboardAvoidingView,\r\n  ImageBackground\r\n} from 'react-native';\r\n\r\n\r\n\r\n\r\n\r\nconst LoginPage = ({navigation}) => {\r\n  const [userName, setUserName] = useState('');\r\n  const [userPassword, setUserPassword] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [errortext, setErrortext] = useState('');\r\n\r\n  const passwordInputRef = createRef();\r\n\r\n  const handleSubmitPress = () => {\r\n    setErrortext('');\r\n    if (!userName) {\r\n      alert('Zadajte Meno');\r\n      return;\r\n    }\r\n    if (!userPassword) {\r\n      alert('Zadajte Heslo');\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    let dataToSend = {name:userName, password: userPassword};\r\n    let formBody = [];\r\n    for (let key in dataToSend) {\r\n      let encodedKey = encodeURIComponent(key);\r\n      let encodedValue = encodeURIComponent(dataToSend[key]);\r\n      formBody.push(encodedKey + '=' + encodedValue);\r\n    }\r\n    formBody = formBody.join('&');\r\n\r\n    fetch('http://127.0.0.1:8000/user/login', {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        user: 7,\r\n        training: item.id\r\n    }),\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((responseJson) => {\r\n\r\n        setLoading(false);\r\n        console.log(responseJson);\r\n        // If server response message same as Data Matched\r\n        if (responseJson.status === 'success') {\r\n\r\n          console.log(responseJson.data.name);\r\n          navigation.replace('DrawerNavigationRoutes');\r\n        } else {\r\n          setErrortext(responseJson.msg);\r\n          console.log('Skontrolujte si svoje Meno a heslo');\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        //Hide Loader\r\n        setLoading(false);\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <View style={styles.mainBody}>\r\n      <ImageBackground\r\n\r\n          source={require(\"../assets/images/loginPhoto.png\")}\r\n          resizeMode=\"cover\"\r\n          style={styles.image2}\r\n          imageStyle={styles.image2_imageStyle}\r\n        >\r\n      <ScrollView\r\n        keyboardShouldPersistTaps=\"handled\"\r\n        contentContainerStyle={{\r\n          flex: 1,\r\n          justifyContent: 'center',\r\n          alignContent: 'center',\r\n        }}>\r\n        <View>\r\n          <KeyboardAvoidingView enabled>\r\n            <View style={{alignItems: 'center'}}>\r\n\r\n            </View>\r\n            <View style={styles.SectionStyle}>\r\n              <TextInput\r\n                style={styles.inputStyle}\r\n                onChangeText={(UserEmail) =>\r\n                  setUserEmail(UserEmail)\r\n                }\r\n                placeholder=\"Zadajte E-mail\" //dummy@abc.com\r\n                placeholderTextColor=\"#8b9cb5\"\r\n                autoCapitalize=\"none\"\r\n                keyboardType=\"email-address\"\r\n                returnKeyType=\"next\"\r\n                onSubmitEditing={() =>\r\n                  passwordInputRef.current &&\r\n                  passwordInputRef.current.focus()\r\n                }\r\n                underlineColorAndroid=\"#f000\"\r\n                blurOnSubmit={false}\r\n              />\r\n            </View>\r\n            <View style={styles.SectionStyle}>\r\n              <TextInput\r\n                style={styles.inputStyle}\r\n                onChangeText={(UserPassword) =>\r\n                  setUserPassword(UserPassword)\r\n                }\r\n                placeholder=\"Zadajte Heslo\" //12345\r\n                placeholderTextColor=\"#8b9cb5\"\r\n                keyboardType=\"default\"\r\n                ref={passwordInputRef}\r\n                onSubmitEditing={Keyboard.dismiss}\r\n                blurOnSubmit={false}\r\n                secureTextEntry={true}\r\n                underlineColorAndroid=\"#f000\"\r\n                returnKeyType=\"next\"\r\n              />\r\n            </View>\r\n            {errortext != '' ? (\r\n              <Text style={styles.errorTextStyle}>\r\n                {errortext}\r\n              </Text>\r\n            ) : null}\r\n            <TouchableOpacity\r\n              style={styles.buttonStyle}\r\n              activeOpacity={0.5}\r\n              onPress={handleSubmitPress}\r\n              >\r\n              <Text style={styles.buttonTextStyle}>Prihlásiť sa</Text>\r\n            </TouchableOpacity>\r\n            <Text\r\n              style={styles.registerTextStyle}\r\n              onPress={() => navigation.navigate('RegisterPage')}>\r\n              Nemáš ešte účet ?\r\n            </Text>\r\n          </KeyboardAvoidingView>\r\n        </View>\r\n      </ScrollView>\r\n      </ImageBackground>\r\n    </View>\r\n  );\r\n};\r\nexport default LoginPage;\r\n\r\nconst styles = StyleSheet.create({\r\n  mainBody: {\r\n    flex: 1,\r\n\r\n  },\r\n  SectionStyle: {\r\n    flexDirection: 'row',\r\n    height: 40,\r\n    marginTop: 20,\r\n    marginLeft: 35,\r\n    marginRight: 35,\r\n    margin: 10,\r\n  },\r\n  buttonStyle: {\r\n    backgroundColor: '#7DE24E',\r\n    borderWidth: 0,\r\n    color: '#FFFFFF',\r\n    borderColor: '#7DE24E',\r\n    height: 40,\r\n    alignItems: 'center',\r\n    borderRadius: 30,\r\n    marginLeft: 35,\r\n    marginRight: 35,\r\n    marginTop: 20,\r\n    marginBottom: 25,\r\n  },\r\n  buttonTextStyle: {\r\n    color: '#FFFFFF',\r\n    paddingVertical: 10,\r\n    fontSize: 16,\r\n  },\r\n  inputStyle: {\r\n    flex: 1,\r\n    color: 'white',\r\n    paddingLeft: 15,\r\n    paddingRight: 15,\r\n    borderWidth: 1,\r\n    borderRadius: 30,\r\n    borderColor: '#dadae8',\r\n  },\r\n  registerTextStyle: {\r\n    color: '#FFFFFF',\r\n    textAlign: 'center',\r\n    fontWeight: 'bold',\r\n    fontSize: 14,\r\n    alignSelf: 'center',\r\n    padding: 10,\r\n  },\r\n  image2: {\r\n    flex: 1,\r\n    justifyContent: \"center\"\r\n  },\r\n  errorTextStyle: {\r\n    color: 'red',\r\n    textAlign: 'center',\r\n    fontSize: 14,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}
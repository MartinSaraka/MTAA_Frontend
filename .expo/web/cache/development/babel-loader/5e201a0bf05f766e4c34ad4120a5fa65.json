{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { state, useState, createRef } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar LoginPage = function LoginPage(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  console.log(route);\n  console.log(route);\n  console.log(route);\n  console.log(route);\n  console.log(route);\n  console.log(route);\n  console.log(route);\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      userName = _useState2[0],\n      setUserName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userPassword = _useState4[0],\n      setUserPassword = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      errortext = _useState8[0],\n      setErrortext = _useState8[1];\n\n  var passwordInputRef = createRef();\n\n  var handleSubmitPress = function handleSubmitPress() {\n    setErrortext('');\n\n    if (!userName) {\n      alert('Zadajte Meno');\n      return;\n    }\n\n    if (!userPassword) {\n      alert('Zadajte Heslo');\n      return;\n    }\n\n    setLoading(true);\n    var dataToSend = {\n      name: userName,\n      password: userPassword\n    };\n    var formBody = [];\n\n    for (var key in dataToSend) {\n      var encodedKey = encodeURIComponent(key);\n      var encodedValue = encodeURIComponent(dataToSend[key]);\n      formBody.push(encodedKey + '=' + encodedValue);\n    }\n\n    formBody = formBody.join('&');\n    var requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: userName,\n        password: userPassword\n      })\n    };\n    fetch('http://192.168.0.101:8080/users/login', requestOptions).then(function _callee(response) {\n      var _response$headers$get;\n\n      var isJson, data, error;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              isJson = (_response$headers$get = response.headers.get('content-type')) == null ? void 0 : _response$headers$get.includes('application/json');\n              _context.t0 = isJson;\n\n              if (!_context.t0) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 5:\n              _context.t0 = _context.sent;\n\n            case 6:\n              data = _context.t0;\n\n              if (response.ok) {\n                _context.next = 14;\n                break;\n              }\n\n              console.error('bbbbbbbbbbbbbbbbbbbbbbbbbbbb');\n              console.log('Skontrulujte si svoje meno a heslo');\n              error = data && data.message || response.status;\n              return _context.abrupt(\"return\", Promise.reject(error));\n\n            case 14:\n              console.log(data.user_token);\n              console.log(data.id);\n              console.log(data.status);\n              navigation.navigate('DrawerNavigationPage', {\n                userId: data.id,\n                userToken: data.user_token\n              });\n              console.error('aaaaaaaaaaaaaaaaa');\n\n            case 19:\n              console.log(data.user_token);\n              console.log(data.id);\n              console.log(data.status);\n\n            case 22:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }).catch(function (error) {\n      console.log('Skontrulujte si svoje meno a heslo1');\n      alert('Skontrulujte si svoje meno a heslo1');\n      console.error('halo je tu error!');\n    });\n  };\n\n  return _jsx(View, {\n    style: styles.mainBody,\n    children: _jsx(ImageBackground, {\n      source: require(\"../assets/images/loginPhoto.png\"),\n      resizeMode: \"cover\",\n      style: styles.image2,\n      imageStyle: styles.image2_imageStyle,\n      children: _jsx(ScrollView, {\n        keyboardShouldPersistTaps: \"handled\",\n        contentContainerStyle: {\n          flex: 1,\n          justifyContent: 'center',\n          alignContent: 'center'\n        },\n        children: _jsx(View, {\n          children: _jsxs(KeyboardAvoidingView, {\n            enabled: true,\n            children: [_jsx(View, {\n              style: {\n                alignItems: 'center'\n              }\n            }), _jsx(View, {\n              style: styles.SectionStyle,\n              children: _jsx(TextInput, {\n                style: styles.inputStyle,\n                onChangeText: function onChangeText(UserName) {\n                  return setUserName(UserName);\n                },\n                placeholder: \"Zadajte Meno\",\n                placeholderTextColor: \"#8b9cb5\",\n                autoCapitalize: \"sentences\",\n                returnKeyType: \"next\",\n                onSubmitEditing: function onSubmitEditing() {\n                  return passwordInputRef.current && passwordInputRef.current.focus();\n                },\n                underlineColorAndroid: \"#f000\",\n                blurOnSubmit: false\n              })\n            }), _jsx(View, {\n              style: styles.SectionStyle,\n              children: _jsx(TextInput, {\n                style: styles.inputStyle,\n                onChangeText: function onChangeText(UserPassword) {\n                  return setUserPassword(UserPassword);\n                },\n                placeholder: \"Zadajte Heslo\",\n                placeholderTextColor: \"#8b9cb5\",\n                keyboardType: \"default\",\n                ref: passwordInputRef,\n                onSubmitEditing: Keyboard.dismiss,\n                blurOnSubmit: false,\n                secureTextEntry: true,\n                underlineColorAndroid: \"#f000\",\n                returnKeyType: \"next\"\n              })\n            }), errortext != '' ? _jsx(Text, {\n              style: styles.errorTextStyle,\n              children: errortext\n            }) : null, _jsx(TouchableOpacity, {\n              style: styles.buttonStyle,\n              activeOpacity: 0.5,\n              onPress: handleSubmitPress,\n              children: _jsx(Text, {\n                style: styles.buttonTextStyle,\n                children: \"Prihl\\xE1si\\u0165 sa\"\n              })\n            }), _jsx(Text, {\n              style: styles.registerTextStyle,\n              onPress: function onPress() {\n                return navigation.navigate('RegisterPage');\n              },\n              children: \"Nem\\xE1\\u0161 e\\u0161te \\xFA\\u010Det ?\"\n            })]\n          })\n        })\n      })\n    })\n  });\n};\n\nexport default LoginPage;\nvar styles = StyleSheet.create({\n  mainBody: {\n    flex: 1\n  },\n  SectionStyle: {\n    flexDirection: 'row',\n    height: 40,\n    marginTop: 20,\n    marginLeft: 35,\n    marginRight: 35,\n    margin: 10\n  },\n  buttonStyle: {\n    backgroundColor: '#7DE24E',\n    borderWidth: 0,\n    color: '#FFFFFF',\n    borderColor: '#7DE24E',\n    height: 40,\n    alignItems: 'center',\n    borderRadius: 30,\n    marginLeft: 35,\n    marginRight: 35,\n    marginTop: 20,\n    marginBottom: 25\n  },\n  buttonTextStyle: {\n    color: '#FFFFFF',\n    paddingVertical: 10,\n    fontSize: 16\n  },\n  inputStyle: {\n    flex: 1,\n    color: 'white',\n    paddingLeft: 15,\n    paddingRight: 15,\n    borderWidth: 1,\n    borderRadius: 30,\n    borderColor: '#dadae8'\n  },\n  registerTextStyle: {\n    color: '#FFFFFF',\n    textAlign: 'center',\n    fontWeight: 'bold',\n    fontSize: 14,\n    alignSelf: 'center',\n    padding: 10\n  },\n  image2: {\n    flex: 1,\n    justifyContent: \"center\"\n  },\n  errorTextStyle: {\n    color: 'red',\n    textAlign: 'center',\n    fontSize: 14\n  }\n});","map":{"version":3,"sources":["/Users/timotejsmolen/WebstormProjects/untitled2/src/screens/LoginPage.js"],"names":["React","state","useState","createRef","LoginPage","navigation","route","console","log","userName","setUserName","userPassword","setUserPassword","loading","setLoading","errortext","setErrortext","passwordInputRef","handleSubmitPress","alert","dataToSend","name","password","formBody","key","encodedKey","encodeURIComponent","encodedValue","push","join","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","isJson","get","includes","json","data","ok","error","message","status","Promise","reject","user_token","id","navigate","userId","userToken","catch","styles","mainBody","require","image2","image2_imageStyle","flex","justifyContent","alignContent","alignItems","SectionStyle","inputStyle","UserName","current","focus","UserPassword","Keyboard","dismiss","errorTextStyle","buttonStyle","buttonTextStyle","registerTextStyle","StyleSheet","create","flexDirection","height","marginTop","marginLeft","marginRight","margin","backgroundColor","borderWidth","color","borderColor","borderRadius","marginBottom","paddingVertical","fontSize","paddingLeft","paddingRight","textAlign","fontWeight","alignSelf","padding"],"mappings":"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","sourcesContent":["import React, {state,useState, createRef} from 'react';\nimport {\n  StyleSheet,\n  TextInput,\n  View,\n  Text,\n  ScrollView,\n  Image,\n  Keyboard,\n  TouchableOpacity,\n  KeyboardAvoidingView,\n  ImageBackground\n} from 'react-native';\n\n\n\n\n\nconst LoginPage = ({navigation,route}) => {\n  console.log(route)\n  console.log(route)\n  console.log(route)\n  console.log(route)\n  console.log(route)\n  console.log(route)\n  console.log(route)\n\n  const [userName, setUserName] = useState('');\n  const [userPassword, setUserPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [errortext, setErrortext] = useState('');\n\n  const passwordInputRef = createRef();\n\n  const handleSubmitPress = () => {\n    setErrortext('');\n    if (!userName) {\n      alert('Zadajte Meno');\n      return;\n    }\n    if (!userPassword) {\n      alert('Zadajte Heslo');\n      return;\n    }\n    setLoading(true);\n    let dataToSend = {name:userName, password: userPassword};\n    let formBody = [];\n    for (let key in dataToSend) {\n      let encodedKey = encodeURIComponent(key);\n      let encodedValue = encodeURIComponent(dataToSend[key]);\n      formBody.push(encodedKey + '=' + encodedValue);\n    }\n    formBody = formBody.join('&');\n\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ name: userName ,\n        password:userPassword })\n  };\n  fetch('http://192.168.0.101:8080/users/login', requestOptions)\n  .then(async response => {\n      const isJson = response.headers.get('content-type')?.includes('application/json');\n      const data = isJson && await response.json();\n\n      // check for error response\n      if (!response.ok) {\n        console.error('bbbbbbbbbbbbbbbbbbbbbbbbbbbb');\n        console.log('Skontrulujte si svoje meno a heslo');\n          const error = (data && data.message) || response.status;\n          return Promise.reject(error);\n      }\n      else{\n        console.log(data.user_token)\n        console.log(data.id)\n        console.log(data.status)\n\n        navigation.navigate('DrawerNavigationPage', {\n          userId: data.id,\n          userToken:data.user_token\n\n        });\n        console.error('aaaaaaaaaaaaaaaaa');\n      }\n     console.log(data.user_token)\n     console.log(data.id)\n     console.log(data.status)\n\n  })\n    .catch(error => {\n      console.log('Skontrulujte si svoje meno a heslo1');\n      alert('Skontrulujte si svoje meno a heslo1');\n      console.error('halo je tu error!');\n  });\n\n  };\n\n  return (\n    <View style={styles.mainBody}>\n      <ImageBackground\n\n          source={require(\"../assets/images/loginPhoto.png\")}\n          resizeMode=\"cover\"\n          style={styles.image2}\n          imageStyle={styles.image2_imageStyle}\n        >\n      <ScrollView\n        keyboardShouldPersistTaps=\"handled\"\n        contentContainerStyle={{\n          flex: 1,\n          justifyContent: 'center',\n          alignContent: 'center',\n        }}>\n        <View>\n          <KeyboardAvoidingView enabled>\n            <View style={{alignItems: 'center'}}>\n\n            </View>\n            <View style={styles.SectionStyle}>\n              <TextInput\n                style={styles.inputStyle}\n                onChangeText={(UserName) =>\n                  setUserName(UserName)\n                }\n                placeholder=\"Zadajte Meno\" //dummy@abc.com\n                placeholderTextColor=\"#8b9cb5\"\n                autoCapitalize=\"sentences\"\n                returnKeyType=\"next\"\n                onSubmitEditing={() =>\n                  passwordInputRef.current &&\n                  passwordInputRef.current.focus()\n                }\n                underlineColorAndroid=\"#f000\"\n                blurOnSubmit={false}\n              />\n            </View>\n            <View style={styles.SectionStyle}>\n              <TextInput\n                style={styles.inputStyle}\n                onChangeText={(UserPassword) =>\n                  setUserPassword(UserPassword)\n                }\n                placeholder=\"Zadajte Heslo\" //12345\n                placeholderTextColor=\"#8b9cb5\"\n                keyboardType=\"default\"\n                ref={passwordInputRef}\n                onSubmitEditing={Keyboard.dismiss}\n                blurOnSubmit={false}\n                secureTextEntry={true}\n                underlineColorAndroid=\"#f000\"\n                returnKeyType=\"next\"\n              />\n            </View>\n            {errortext != '' ? (\n              <Text style={styles.errorTextStyle}>\n                {errortext}\n              </Text>\n            ) : null}\n            <TouchableOpacity\n              style={styles.buttonStyle}\n              activeOpacity={0.5}\n              onPress={handleSubmitPress}\n              >\n              <Text\n              style={styles.buttonTextStyle}>Prihlásiť sa</Text>\n            </TouchableOpacity>\n            <Text\n              style={styles.registerTextStyle}\n              onPress={() => navigation.navigate('RegisterPage')}>\n              Nemáš ešte účet ?\n            </Text>\n          </KeyboardAvoidingView>\n        </View>\n      </ScrollView>\n      </ImageBackground>\n    </View>\n  );\n};\nexport default LoginPage;\n\nconst styles = StyleSheet.create({\n  mainBody: {\n    flex: 1,\n\n  },\n  SectionStyle: {\n    flexDirection: 'row',\n    height: 40,\n    marginTop: 20,\n    marginLeft: 35,\n    marginRight: 35,\n    margin: 10,\n  },\n  buttonStyle: {\n    backgroundColor: '#7DE24E',\n    borderWidth: 0,\n    color: '#FFFFFF',\n    borderColor: '#7DE24E',\n    height: 40,\n    alignItems: 'center',\n    borderRadius: 30,\n    marginLeft: 35,\n    marginRight: 35,\n    marginTop: 20,\n    marginBottom: 25,\n  },\n  buttonTextStyle: {\n    color: '#FFFFFF',\n    paddingVertical: 10,\n    fontSize: 16,\n  },\n  inputStyle: {\n    flex: 1,\n    color: 'white',\n    paddingLeft: 15,\n    paddingRight: 15,\n    borderWidth: 1,\n    borderRadius: 30,\n    borderColor: '#dadae8',\n  },\n  registerTextStyle: {\n    color: '#FFFFFF',\n    textAlign: 'center',\n    fontWeight: 'bold',\n    fontSize: 14,\n    alignSelf: 'center',\n    padding: 10,\n  },\n  image2: {\n    flex: 1,\n    justifyContent: \"center\"\n  },\n  errorTextStyle: {\n    color: 'red',\n    textAlign: 'center',\n    fontSize: 14,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}
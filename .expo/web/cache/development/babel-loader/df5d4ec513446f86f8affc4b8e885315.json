{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { createStackNavigator, createAppContainer } from 'react-navigation';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar HomeScreen = function (_React$Component) {\n  _inherits(HomeScreen, _React$Component);\n\n  var _super = _createSuper(HomeScreen);\n\n  function HomeScreen() {\n    _classCallCheck(this, HomeScreen);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(HomeScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return _jsxs(View, {\n        style: {\n          flex: 1,\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        children: [_jsx(Text, {\n          children: \"Home Screen\"\n        }), _jsx(Button, {\n          title: \"Go to Profile\",\n          onPress: function onPress() {\n            return _this.props.navigation.push('Profile');\n          }\n        })]\n      });\n    }\n  }]);\n\n  return HomeScreen;\n}(React.Component);\n\nvar ProfileScreen = function (_React$Component2) {\n  _inherits(ProfileScreen, _React$Component2);\n\n  var _super2 = _createSuper(ProfileScreen);\n\n  function ProfileScreen() {\n    _classCallCheck(this, ProfileScreen);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(ProfileScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _jsxs(View, {\n        style: {\n          flex: 1,\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        },\n        children: [_jsx(Text, {\n          children: \"Profile Screen\"\n        }), _jsx(Button, {\n          title: \"Go to Profile... again\",\n          onPress: function onPress() {\n            return _this2.props.navigation.push('Profile');\n          }\n        }), _jsx(Button, {\n          title: \"Go to Home\",\n          onPress: function onPress() {\n            return _this2.props.navigation.navigate('Home');\n          }\n        }), _jsx(Button, {\n          title: \"Go back\",\n          onPress: function onPress() {\n            return _this2.props.navigation.goBack();\n          }\n        })]\n      });\n    }\n  }]);\n\n  return ProfileScreen;\n}(React.Component);\n\nvar AppNavigator = createStackNavigator({\n  Home: HomeScreen,\n  Profile: ProfileScreen\n}, {\n  initialRouteName: \"Home\"\n});\nvar AppContainer = createAppContainer(AppNavigator);\n\nvar App = function (_React$Component3) {\n  _inherits(App, _React$Component3);\n\n  var _super3 = _createSuper(App);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _super3.apply(this, arguments);\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return _jsx(AppContainer, {});\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };","map":{"version":3,"sources":["C:/Users/sacre/AwesomeProject/App.js"],"names":["React","createStackNavigator","createAppContainer","HomeScreen","flex","alignItems","justifyContent","props","navigation","push","Component","ProfileScreen","navigate","goBack","AppNavigator","Home","Profile","initialRouteName","AppContainer","App"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,oBAAT,EAA+BC,kBAA/B,QAAyD,kBAAzD;;;;IAEMC,U;;;;;;;;;;;;;WACF,kBAAS;AAAA;;AACL,aACI,MAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAE,CAAR;AAAWC,UAAAA,UAAU,EAAE,QAAvB;AAAiCC,UAAAA,cAAc,EAAE;AAAjD,SAAb;AAAA,mBACI,KAAC,IAAD;AAAA;AAAA,UADJ,EAEI,KAAC,MAAD;AACI,UAAA,KAAK,EAAC,eADV;AAEI,UAAA,OAAO,EAAE;AAAA,mBAAM,KAAI,CAACC,KAAL,CAAWC,UAAX,CAAsBC,IAAtB,CAA2B,SAA3B,CAAN;AAAA;AAFb,UAFJ;AAAA,QADJ;AASH;;;;EAXoBT,KAAK,CAACU,S;;IAazBC,a;;;;;;;;;;;;;WACF,kBAAS;AAAA;;AACL,aACI,MAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEP,UAAAA,IAAI,EAAE,CAAR;AAAWC,UAAAA,UAAU,EAAE,QAAvB;AAAiCC,UAAAA,cAAc,EAAE;AAAjD,SAAb;AAAA,mBACI,KAAC,IAAD;AAAA;AAAA,UADJ,EAEI,KAAC,MAAD;AACI,UAAA,KAAK,EAAC,wBADV;AAEI,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACC,KAAL,CAAWC,UAAX,CAAsBC,IAAtB,CAA2B,SAA3B,CAAN;AAAA;AAFb,UAFJ,EAMI,KAAC,MAAD;AACI,UAAA,KAAK,EAAC,YADV;AAEI,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACF,KAAL,CAAWC,UAAX,CAAsBI,QAAtB,CAA+B,MAA/B,CAAN;AAAA;AAFb,UANJ,EAUI,KAAC,MAAD;AACI,UAAA,KAAK,EAAC,SADV;AAEI,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACL,KAAL,CAAWC,UAAX,CAAsBK,MAAtB,EAAN;AAAA;AAFb,UAVJ;AAAA,QADJ;AAiBH;;;;EAnBuBb,KAAK,CAACU,S;;AAsBlC,IAAMI,YAAY,GAAGb,oBAAoB,CACrC;AACIc,EAAAA,IAAI,EAAEZ,UADV;AAEIa,EAAAA,OAAO,EAAEL;AAFb,CADqC,EAKrC;AACIM,EAAAA,gBAAgB,EAAE;AADtB,CALqC,CAAzC;AAUA,IAAMC,YAAY,GAAGhB,kBAAkB,CAACY,YAAD,CAAvC;;IACqBK,G;;;;;;;;;;;;;WACjB,kBAAS;AACL,aAAO,KAAC,YAAD,KAAP;AACH;;;;EAH4BnB,KAAK,CAACU,S;;SAAlBS,G","sourcesContent":["import React from 'react';  \nimport { View, Text, Button } from 'react-native';  \nimport { createStackNavigator, createAppContainer } from 'react-navigation';  \n  \nclass HomeScreen extends React.Component {  \n    render() {  \n        return (  \n            <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>  \n                <Text>Home Screen</Text>  \n                <Button  \n                    title=\"Go to Profile\"  \n                    onPress={() => this.props.navigation.push('Profile')}  \n                />  \n            </View>  \n        );  \n    }  \n}  \nclass ProfileScreen extends React.Component {  \n    render() {  \n        return (  \n            <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>  \n                <Text>Profile Screen</Text>  \n                <Button  \n                    title=\"Go to Profile... again\"  \n                    onPress={() => this.props.navigation.push('Profile')}  \n                />  \n                <Button  \n                    title=\"Go to Home\"  \n                    onPress={() => this.props.navigation.navigate('Home')}  \n                 />  \n                <Button  \n                    title=\"Go back\"  \n                    onPress={() => this.props.navigation.goBack()}  \n                />  \n            </View>  \n    );  \n    }  \n}  \n  \nconst AppNavigator = createStackNavigator(  \n    {  \n        Home: HomeScreen,  \n        Profile: ProfileScreen  \n    },  \n    {  \n        initialRouteName: \"Home\"  \n    }  \n);  \n  \nconst AppContainer = createAppContainer(AppNavigator);  \nexport default class App extends React.Component {  \n    render() {  \n        return <AppContainer />;  \n    }  \n}  "]},"metadata":{},"sourceType":"module"}
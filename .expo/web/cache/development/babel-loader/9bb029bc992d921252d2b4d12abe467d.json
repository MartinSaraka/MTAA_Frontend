{"ast":null,"code":"import React from \"react\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport ContactPage from \"./ContactPage\";\nimport CoachPage from \"./CoachPage\";\nimport PricingPage from \"./PricingPage\";\nimport AdminTrainingPage from \"./AdminTrainingPage\";\nimport TrainingsPage from \"./TrainingsPage\";\nimport ChangeTrainingPage from \"./ChangeTrainingPage\";\nimport AddTrainingPage from \"./AddTrainingPage\";\nimport CustomSidebarMenu from \"../components/CustomSidebarMenu\";\nimport NavigationDrawerHeader from \"../components/NavigationDrawerHeader\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar Drawer = createDrawerNavigator();\n\nvar CoachPageStack = function CoachPageStack(_ref) {\n  var navigation = _ref.navigation;\n  return _jsx(Stack.Navigator, {\n    initialRouteName: \"CoachPage\",\n    children: _jsx(Stack.Screen, {\n      name: \"CoachPage\",\n      initialParams: {\n        itemId: userId,\n        userToken: userToken\n      },\n      component: CoachPage,\n      options: {\n        title: \"O nás\",\n        headerLeft: function headerLeft() {\n          return _jsx(NavigationDrawerHeader, {\n            navigationProps: navigation\n          });\n        },\n        headerStyle: {\n          backgroundColor: \"#307ecc\"\n        },\n        headerTintColor: \"#fff\",\n        headerTitleStyle: {\n          fontWeight: \"bold\"\n        }\n      }\n    })\n  });\n};\n\nvar ContactPageStack = function ContactPageStack(_ref2) {\n  var navigation = _ref2.navigation;\n  return _jsx(Stack.Navigator, {\n    initialRouteName: \"ContactPage\",\n    initialParams: {\n      itemId: userId,\n      userToken: userToken\n    },\n    screenOptions: {\n      headerLeft: function headerLeft() {\n        return _jsx(NavigationDrawerHeader, {\n          navigationProps: navigation\n        });\n      },\n      headerStyle: {\n        backgroundColor: \"#307ecc\"\n      },\n      headerTintColor: \"#fff\",\n      headerTitleStyle: {\n        fontWeight: \"bold\"\n      }\n    },\n    children: _jsx(Stack.Screen, {\n      initialParams: {\n        itemId: userId,\n        userToken: userToken\n      },\n      name: \"ContactPage\",\n      component: ContactPage,\n      options: {\n        title: \"Kontakt\"\n      }\n    })\n  });\n};\n\nvar PricingPageStack = function PricingPageStack(_ref3) {\n  var navigation = _ref3.navigation;\n  return _jsx(Stack.Navigator, {\n    initialRouteName: \"PricingPage\",\n    initialParams: {\n      itemId: userId,\n      userToken: userToken\n    },\n    screenOptions: {\n      headerLeft: function headerLeft() {\n        return _jsx(NavigationDrawerHeader, {\n          navigationProps: navigation\n        });\n      },\n      headerStyle: {\n        backgroundColor: \"#307ecc\"\n      },\n      headerTintColor: \"#fff\",\n      headerTitleStyle: {\n        fontWeight: \"bold\"\n      }\n    },\n    children: _jsx(Stack.Screen, {\n      initialParams: {\n        itemId: userId,\n        userToken: userToken\n      },\n      name: \"PricingPage\",\n      component: PricingPage,\n      options: {\n        title: \"Cenník\"\n      }\n    })\n  });\n};\n\nvar AdminTrainingPageStack = function AdminTrainingPageStack(_ref4) {\n  var navigation = _ref4.navigation;\n  return _jsx(Stack.Navigator, {\n    initialParams: {\n      itemId: userId,\n      userToken: userToken\n    },\n    initialRouteName: \"AdminTrainingPage\",\n    screenOptions: {\n      headerLeft: function headerLeft() {\n        return _jsx(NavigationDrawerHeader, {\n          navigationProps: navigation\n        });\n      },\n      headerStyle: {\n        backgroundColor: \"#307ecc\"\n      },\n      headerTintColor: \"#fff\",\n      headerTitleStyle: {\n        fontWeight: \"bold\"\n      }\n    },\n    children: _jsx(Stack.Screen, {\n      initialParams: {\n        itemId: userId,\n        userToken: userToken\n      },\n      name: \"AdminTrainingPage\",\n      component: AdminTrainingPage,\n      options: {\n        title: \"Tréningy-admin\"\n      }\n    })\n  });\n};\n\nvar TrainingsPageStack = function TrainingsPageStack(_ref5) {\n  var navigation = _ref5.navigation;\n  return _jsx(Stack.Navigator, {\n    initialParams: {\n      itemId: userId,\n      userToken: userToken\n    },\n    initialRouteName: \"TrainingsPage\",\n    screenOptions: {\n      headerLeft: function headerLeft() {\n        return _jsx(NavigationDrawerHeader, {\n          navigationProps: navigation\n        });\n      },\n      headerStyle: {\n        backgroundColor: \"#307ecc\"\n      },\n      headerTintColor: \"#fff\",\n      headerTitleStyle: {\n        fontWeight: \"bold\"\n      }\n    },\n    children: _jsx(Stack.Screen, {\n      initialParams: {\n        itemId: userId,\n        userToken: userToken\n      },\n      name: \"TrainingsPage\",\n      component: TrainingsPage,\n      options: {\n        title: \"Tréningy\"\n      }\n    })\n  });\n};\n\nvar ChangeTrainingPageStack = function ChangeTrainingPageStack(_ref6) {\n  var navigation = _ref6.navigation;\n  return _jsx(Stack.Navigator, {\n    initialRouteName: \"ChangeTrainingPage\",\n    initialParams: {\n      itemId: userId,\n      userToken: userToken\n    },\n    screenOptions: {\n      headerLeft: function headerLeft() {\n        return _jsx(NavigationDrawerHeader, {\n          navigationProps: navigation\n        });\n      },\n      headerStyle: {\n        backgroundColor: \"#307ecc\"\n      },\n      headerTintColor: \"#fff\",\n      headerTitleStyle: {\n        fontWeight: \"bold\"\n      }\n    },\n    children: _jsx(Stack.Screen, {\n      name: \"ChangeTrainingPage\",\n      initialParams: {\n        itemId: userId,\n        userToken: userToken\n      },\n      component: ChangeTrainingPage,\n      options: {\n        title: \"Tréningy-zmena\"\n      }\n    })\n  });\n};\n\nvar AddTrainingPageStack = function AddTrainingPageStack(_ref7) {\n  var navigation = _ref7.navigation;\n  return _jsx(Stack.Navigator, {\n    initialRouteName: \"AddTrainingPage\",\n    initialParams: {\n      itemId: userId,\n      userToken: userToken\n    },\n    screenOptions: {\n      headerLeft: function headerLeft() {\n        return _jsx(NavigationDrawerHeader, {\n          navigationProps: navigation\n        });\n      },\n      headerStyle: {\n        backgroundColor: \"#307ecc\"\n      },\n      headerTintColor: \"#fff\",\n      headerTitleStyle: {\n        fontWeight: \"bold\"\n      }\n    },\n    children: _jsx(Stack.Screen, {\n      name: \"AddTrainingPage\",\n      initialParams: {\n        itemId: userId,\n        userToken: userToken\n      },\n      component: AddTrainingPage,\n      options: {\n        title: \"Tréningy-pridanie\"\n      }\n    })\n  });\n};\n\nvar userId = 0;\nvar userToken = \"\";\n\nvar DrawerNavigationPage = function DrawerNavigationPage(_ref8) {\n  var route = _ref8.route,\n      navigation = _ref8.navigation;\n  userId = route.params;\n  userToken = route.params;\n  console.log(route);\n  console.log(route);\n  console.log(userId);\n  console.log(userToken);\n  var isAdmin = false;\n\n  if (userToken[\"userToken\"] === \"i5aQSJUTBmb5ktDpDw7RQyMQar5EqzUq\") {\n    isAdmin = true;\n  } else {\n    console.log(\"dnes nie\");\n  }\n\n  return _jsx(Drawer.Navigator, {\n    screenOptions: {\n      activeTintColor: \"#cee1f2\",\n      color: \"#cee1f2\",\n      itemStyle: {\n        marginVertical: 5,\n        color: \"white\"\n      },\n      labelStyle: {\n        color: \"#d8d8d8\"\n      },\n      headerShown: false\n    },\n    drawerContent: CustomSidebarMenu,\n    children: isAdmin == true ? _jsxs(_Fragment, {\n      children: [_jsx(Drawer.Screen, {\n        name: \"CoachPageStack\",\n        options: {\n          drawerLabel: \"Trenéri\"\n        },\n        component: CoachPageStack\n      }), _jsx(Drawer.Screen, {\n        name: \"ContactPageStack\",\n        options: {\n          drawerLabel: \"Kontakt\"\n        },\n        component: ContactPageStack\n      }), _jsx(Drawer.Screen, {\n        name: \"PricingPageStack\",\n        options: {\n          drawerLabel: \"Cenník\"\n        },\n        component: PricingPageStack\n      }), _jsx(Drawer.Screen, {\n        name: \"AdminTrainingPageStack\",\n        options: {\n          drawerLabel: \"Treningy-admin\"\n        },\n        component: AdminTrainingPageStack\n      }), _jsx(Drawer.Screen, {\n        name: \"ChangeTrainingPageStack\",\n        options: {\n          drawerLabel: \"Zmena tréningov\"\n        },\n        component: ChangeTrainingPageStack\n      }), _jsx(Drawer.Screen, {\n        name: \"AddTrainingPageStack\",\n        options: {\n          drawerLabel: \"Pridanie tréningu\"\n        },\n        component: AddTrainingPageStack\n      })]\n    }) : _jsxs(_Fragment, {\n      children: [_jsx(Drawer.Screen, {\n        name: \"CoachPageStack\",\n        options: {\n          drawerLabel: \"Trenéri\"\n        },\n        component: CoachPageStack\n      }), _jsx(Drawer.Screen, {\n        name: \"ContactPageStack\",\n        options: {\n          drawerLabel: \"Kontakt\"\n        },\n        component: ContactPageStack\n      }), _jsx(Drawer.Screen, {\n        name: \"PricingPageStack\",\n        options: {\n          drawerLabel: \"Cenník\"\n        },\n        component: PricingPageStack\n      }), _jsx(Drawer.Screen, {\n        name: \"TrainingsPageStack\",\n        options: {\n          drawerLabel: \"Tréningy\"\n        },\n        component: TrainingsPageStack\n      })]\n    })\n  });\n};\n\nexport default DrawerNavigationPage;","map":{"version":3,"sources":["C:/Users/sacre/AwesomeProject/src/screens/DrawerNavigationPage.js"],"names":["React","createStackNavigator","createDrawerNavigator","ContactPage","CoachPage","PricingPage","AdminTrainingPage","TrainingsPage","ChangeTrainingPage","AddTrainingPage","CustomSidebarMenu","NavigationDrawerHeader","Stack","Drawer","CoachPageStack","navigation","itemId","userId","userToken","title","headerLeft","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","ContactPageStack","PricingPageStack","AdminTrainingPageStack","TrainingsPageStack","ChangeTrainingPageStack","AddTrainingPageStack","DrawerNavigationPage","route","params","console","log","isAdmin","activeTintColor","color","itemStyle","marginVertical","labelStyle","headerShown","drawerLabel"],"mappings":"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","sourcesContent":["// Import React\r\nimport React from \"react\";\r\n\r\n// Import Navigators from React Navigation\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\r\n\r\n// Import Screens\r\nimport ContactPage from \"./ContactPage\";\r\nimport CoachPage from \"./CoachPage\";\r\nimport PricingPage from \"./PricingPage\";\r\nimport AdminTrainingPage from \"./AdminTrainingPage\";\r\nimport TrainingsPage from \"./TrainingsPage\";\r\nimport ChangeTrainingPage from \"./ChangeTrainingPage\";\r\nimport AddTrainingPage from \"./AddTrainingPage\";\r\nimport CustomSidebarMenu from \"../components/CustomSidebarMenu\";\r\nimport NavigationDrawerHeader from \"../components/NavigationDrawerHeader\";\r\nconst Stack = createStackNavigator();\r\nconst Drawer = createDrawerNavigator();\r\n\r\nconst CoachPageStack = ({ navigation }) => {\r\n  return (\r\n    <Stack.Navigator initialRouteName=\"CoachPage\">\r\n      <Stack.Screen\r\n        name=\"CoachPage\"\r\n        initialParams={{ itemId: userId, userToken: userToken }}\r\n        component={CoachPage}\r\n        options={{\r\n          title: \"O nás\",\r\n          headerLeft: () => (\r\n            <NavigationDrawerHeader navigationProps={navigation} />\r\n          ),\r\n          headerStyle: {\r\n            backgroundColor: \"#307ecc\",\r\n          },\r\n          headerTintColor: \"#fff\",\r\n          headerTitleStyle: {\r\n            fontWeight: \"bold\",\r\n          },\r\n        }}\r\n      />\r\n    </Stack.Navigator>\r\n  );\r\n};\r\n\r\nconst ContactPageStack = ({ navigation }) => {\r\n  return (\r\n    <Stack.Navigator\r\n      initialRouteName=\"ContactPage\"\r\n      initialParams={{ itemId: userId, userToken: userToken }}\r\n      screenOptions={{\r\n        headerLeft: () => (\r\n          <NavigationDrawerHeader navigationProps={navigation} />\r\n        ),\r\n        headerStyle: {\r\n          backgroundColor: \"#307ecc\",\r\n        },\r\n        headerTintColor: \"#fff\",\r\n        headerTitleStyle: {\r\n          fontWeight: \"bold\",\r\n        },\r\n      }}\r\n    >\r\n      <Stack.Screen\r\n        initialParams={{ itemId: userId, userToken: userToken }}\r\n        name=\"ContactPage\"\r\n        component={ContactPage}\r\n        options={{\r\n          title: \"Kontakt\",\r\n        }}\r\n      />\r\n    </Stack.Navigator>\r\n  );\r\n};\r\nconst PricingPageStack = ({ navigation }) => {\r\n  return (\r\n    <Stack.Navigator\r\n      initialRouteName=\"PricingPage\"\r\n      initialParams={{ itemId: userId, userToken: userToken }}\r\n      screenOptions={{\r\n        headerLeft: () => (\r\n          <NavigationDrawerHeader navigationProps={navigation} />\r\n        ),\r\n        headerStyle: {\r\n          backgroundColor: \"#307ecc\",\r\n        },\r\n        headerTintColor: \"#fff\",\r\n        headerTitleStyle: {\r\n          fontWeight: \"bold\",\r\n        },\r\n      }}\r\n    >\r\n      <Stack.Screen\r\n        initialParams={{ itemId: userId, userToken: userToken }}\r\n        name=\"PricingPage\"\r\n        component={PricingPage}\r\n        options={{\r\n          title: \"Cenník\",\r\n        }}\r\n      />\r\n    </Stack.Navigator>\r\n  );\r\n};\r\nconst AdminTrainingPageStack = ({ navigation }) => {\r\n  return (\r\n    <Stack.Navigator\r\n      initialParams={{ itemId: userId, userToken: userToken }}\r\n      initialRouteName=\"AdminTrainingPage\"\r\n      screenOptions={{\r\n        headerLeft: () => (\r\n          <NavigationDrawerHeader navigationProps={navigation} />\r\n        ),\r\n        headerStyle: {\r\n          backgroundColor: \"#307ecc\",\r\n        },\r\n        headerTintColor: \"#fff\",\r\n        headerTitleStyle: {\r\n          fontWeight: \"bold\",\r\n        },\r\n      }}\r\n    >\r\n      <Stack.Screen\r\n        initialParams={{ itemId: userId, userToken: userToken }}\r\n        name=\"AdminTrainingPage\"\r\n        component={AdminTrainingPage}\r\n        options={{\r\n          title: \"Tréningy-admin\",\r\n        }}\r\n      />\r\n    </Stack.Navigator>\r\n  );\r\n};\r\nconst TrainingsPageStack = ({ navigation }) => {\r\n  return (\r\n    <Stack.Navigator\r\n      initialParams={{ itemId: userId, userToken: userToken }}\r\n      initialRouteName=\"TrainingsPage\"\r\n      screenOptions={{\r\n        headerLeft: () => (\r\n          <NavigationDrawerHeader navigationProps={navigation} />\r\n        ),\r\n        headerStyle: {\r\n          backgroundColor: \"#307ecc\",\r\n        },\r\n        headerTintColor: \"#fff\",\r\n        headerTitleStyle: {\r\n          fontWeight: \"bold\",\r\n        },\r\n      }}\r\n    >\r\n      <Stack.Screen\r\n        initialParams={{ itemId: userId, userToken: userToken }}\r\n        name=\"TrainingsPage\"\r\n        component={TrainingsPage}\r\n        options={{\r\n          title: \"Tréningy\",\r\n        }}\r\n      />\r\n    </Stack.Navigator>\r\n  );\r\n};\r\nconst ChangeTrainingPageStack = ({ navigation }) => {\r\n  return (\r\n    <Stack.Navigator\r\n      initialRouteName=\"ChangeTrainingPage\"\r\n      initialParams={{ itemId: userId, userToken: userToken }}\r\n      screenOptions={{\r\n        headerLeft: () => (\r\n          <NavigationDrawerHeader navigationProps={navigation} />\r\n        ),\r\n        headerStyle: {\r\n          backgroundColor: \"#307ecc\",\r\n        },\r\n        headerTintColor: \"#fff\",\r\n        headerTitleStyle: {\r\n          fontWeight: \"bold\",\r\n        },\r\n      }}\r\n    >\r\n      <Stack.Screen\r\n        name=\"ChangeTrainingPage\"\r\n        initialParams={{ itemId: userId, userToken: userToken }}\r\n        component={ChangeTrainingPage}\r\n        options={{\r\n          title: \"Tréningy-zmena\",\r\n        }}\r\n      />\r\n    </Stack.Navigator>\r\n  );\r\n};\r\nconst AddTrainingPageStack = ({ navigation }) => {\r\n  return (\r\n    <Stack.Navigator\r\n      initialRouteName=\"AddTrainingPage\"\r\n      initialParams={{ itemId: userId, userToken: userToken }}\r\n      screenOptions={{\r\n        headerLeft: () => (\r\n          <NavigationDrawerHeader navigationProps={navigation} />\r\n        ),\r\n        headerStyle: {\r\n          backgroundColor: \"#307ecc\",\r\n        },\r\n        headerTintColor: \"#fff\",\r\n        headerTitleStyle: {\r\n          fontWeight: \"bold\",\r\n        },\r\n      }}\r\n    >\r\n      <Stack.Screen\r\n        name=\"AddTrainingPage\"\r\n        initialParams={{ itemId: userId, userToken: userToken }}\r\n        component={AddTrainingPage}\r\n        options={{\r\n          title: \"Tréningy-pridanie\",\r\n        }}\r\n      />\r\n    </Stack.Navigator>\r\n  );\r\n};\r\nlet userId = 0;\r\nlet userToken = \"\";\r\nconst DrawerNavigationPage = ({ route, navigation }) => {\r\n  userId = route.params;\r\n  userToken = route.params;\r\n  console.log(route);\r\n  console.log(route);\r\n  console.log(userId);\r\n  console.log(userToken);\r\n  let isAdmin = false;\r\n  if (userToken[\"userToken\"] === \"i5aQSJUTBmb5ktDpDw7RQyMQar5EqzUq\") {\r\n    isAdmin = true;\r\n  } else {\r\n    console.log(\"dnes nie\");\r\n  }\r\n  return (\r\n    <Drawer.Navigator\r\n      screenOptions={{\r\n        activeTintColor: \"#cee1f2\",\r\n        color: \"#cee1f2\",\r\n        itemStyle: { marginVertical: 5, color: \"white\" },\r\n        labelStyle: {\r\n          color: \"#d8d8d8\",\r\n        },\r\n        headerShown: false,\r\n      }}\r\n      drawerContent={CustomSidebarMenu}\r\n    >\r\n      {isAdmin == true ? (\r\n        <>\r\n          <Drawer.Screen\r\n            name=\"CoachPageStack\"\r\n            options={{ drawerLabel: \"Trenéri\" }}\r\n            component={CoachPageStack}\r\n          />\r\n          <Drawer.Screen\r\n            name=\"ContactPageStack\"\r\n            options={{ drawerLabel: \"Kontakt\" }}\r\n            component={ContactPageStack}\r\n          />\r\n          <Drawer.Screen\r\n            name=\"PricingPageStack\"\r\n            options={{ drawerLabel: \"Cenník\" }}\r\n            component={PricingPageStack}\r\n          />\r\n          <Drawer.Screen\r\n            name=\"AdminTrainingPageStack\"\r\n            options={{ drawerLabel: \"Treningy-admin\" }}\r\n            component={AdminTrainingPageStack}\r\n          />\r\n\r\n          <Drawer.Screen\r\n            name=\"ChangeTrainingPageStack\"\r\n            options={{ drawerLabel: \"Zmena tréningov\" }}\r\n            component={ChangeTrainingPageStack}\r\n          />\r\n          <Drawer.Screen\r\n            name=\"AddTrainingPageStack\"\r\n            options={{ drawerLabel: \"Pridanie tréningu\" }}\r\n            component={AddTrainingPageStack}\r\n          />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Drawer.Screen\r\n            name=\"CoachPageStack\"\r\n            options={{ drawerLabel: \"Trenéri\" }}\r\n            component={CoachPageStack}\r\n          />\r\n          <Drawer.Screen\r\n            name=\"ContactPageStack\"\r\n            options={{ drawerLabel: \"Kontakt\" }}\r\n            component={ContactPageStack}\r\n          />\r\n          <Drawer.Screen\r\n            name=\"PricingPageStack\"\r\n            options={{ drawerLabel: \"Cenník\" }}\r\n            component={PricingPageStack}\r\n          />\r\n\r\n          <Drawer.Screen\r\n            name=\"TrainingsPageStack\"\r\n            options={{ drawerLabel: \"Tréningy\" }}\r\n            component={TrainingsPageStack}\r\n          />\r\n        </>\r\n      )}\r\n    </Drawer.Navigator>\r\n  );\r\n};\r\n\r\nexport default DrawerNavigationPage;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport CupertinoButtonBlackTextColor2 from \"../components/CupertinoButtonBlackTextColor2\";\nimport Training_Get from \"../components/TrainingsGet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar TestPage = function TestPage() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  var getTrainings = function getTrainings() {\n    var response, json;\n    return _regeneratorRuntime.async(function getTrainings$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch('http://127.0.0.1:8000/CHbUs3NTcHrH08PNHZsa1BsKFSkQgvZx/trainings'));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            json = _context.sent;\n            setData(json.training);\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 13:\n            _context.prev = 13;\n            setLoading(false);\n            return _context.finish(13);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10, 13, 16]], Promise);\n  };\n\n  useEffect(function () {\n    getTrainings();\n  }, []);\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(ImageBackground, {\n      source: require(\"../assets/images/image_JMVe..png\"),\n      resizeMode: \"contain\",\n      style: styles.image,\n      imageStyle: styles.image_imageStyle,\n      children: isLoading ? _jsx(ActivityIndicator, {}) : _jsx(FlatList, {\n        data: data,\n        keyExtractor: function keyExtractor(_ref, index) {\n          var id = _ref.id;\n          return id;\n        },\n        renderItem: function renderItem(_ref2) {\n          var item = _ref2.item;\n          return _jsxs(View, {\n            style: styles.image1Row,\n            children: [_jsx(Image, {\n              source: require(\"../assets/images/image_uZOV..png\"),\n              resizeMode: \"contain\",\n              style: styles.image1\n            }), _jsxs(View, {\n              style: styles.dateTimeColumn,\n              children: [_jsxs(Text, {\n                style: styles.dateTime,\n                children: [item.date, \"/\", item.time]\n              }), _jsx(CupertinoButtonBlackTextColor2, {\n                style: styles.cupertinoButtonBlackTextColor2\n              })]\n            })]\n          });\n        }\n      })\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  image: {\n    height: 885,\n    width: 628,\n    alignSelf: \"center\"\n  },\n  image_imageStyle: {},\n  image1: {\n    height: 153,\n    width: 133\n  },\n  dateTime: {\n    fontFamily: \"roboto-regular\",\n    color: \"#121212\",\n    fontSize: 15,\n    alignItems: \"center\"\n  },\n  cupertinoButtonBlackTextColor2: {\n    height: 44,\n    width: 100,\n    marginTop: 14,\n    marginLeft: 2\n  },\n  dateTimeColumn: {\n    width: 111,\n    marginLeft: 10,\n    marginTop: 34,\n    marginBottom: 32\n  },\n  image1Row: {\n    height: 153,\n    flexDirection: \"row\",\n    marginTop: 155,\n    marginLeft: 147,\n    marginRight: 227\n  },\n  image2: {\n    height: 153,\n    width: 133\n  },\n  dateTime2: {\n    fontFamily: \"roboto-regular\",\n    color: \"#121212\",\n    fontSize: 24\n  },\n  cupertinoButtonBlackTextColor3: {\n    height: 44,\n    width: 100,\n    marginTop: 9,\n    marginLeft: 4\n  },\n  dateTime2Column: {\n    width: 107,\n    marginLeft: 12,\n    marginTop: 24,\n    marginBottom: 47\n  },\n  image2Row: {\n    height: 153,\n    flexDirection: \"row\",\n    marginTop: 22,\n    marginLeft: 147,\n    marginRight: 229\n  }\n});\nexport default TestPage;","map":{"version":3,"sources":["/Users/timotejsmolen/WebstormProjects/untitled2/src/screens/TestPage.js"],"names":["React","useEffect","useState","CupertinoButtonBlackTextColor2","Training_Get","TestPage","isLoading","setLoading","data","setData","getTrainings","fetch","response","json","training","console","error","styles","container","require","image","image_imageStyle","index","id","item","image1Row","image1","dateTimeColumn","dateTime","date","time","cupertinoButtonBlackTextColor2","StyleSheet","create","flex","height","width","alignSelf","fontFamily","color","fontSize","alignItems","marginTop","marginLeft","marginBottom","flexDirection","marginRight","image2","dateTime2","cupertinoButtonBlackTextColor3","dateTime2Column","image2Row"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {ActivityIndicator, FlatList, StyleSheet, Text, View, Image, ImageBackground} from 'react-native';\nimport CupertinoButtonBlackTextColor2 from \"../components/CupertinoButtonBlackTextColor2\";\nimport Training_Get from \"../components/TrainingsGet\";\n\n\n\nconst TestPage = () => {\n    const [isLoading, setLoading] = useState(true);\n    const [data, setData] = useState([]);\n\n    const getTrainings = async () => {\n        try {\n            const response = await fetch('http://127.0.0.1:8000/CHbUs3NTcHrH08PNHZsa1BsKFSkQgvZx/trainings');\n            const json = await response.json();\n            setData(json.training);\n        } catch (error) {\n            console.error(error);\n        } finally {\n            setLoading(false);\n        }\n    }\n\n    useEffect(() => {\n        getTrainings();\n    }, []);\n\n    return (\n        <View style={styles.container}>\n            <ImageBackground\n                source={require(\"../assets/images/image_JMVe..png\")}\n                resizeMode=\"contain\"\n                style={styles.image}\n                imageStyle={styles.image_imageStyle}\n            >\n            {isLoading ? <ActivityIndicator/> : (\n                <FlatList\n                    data={data}\n                    keyExtractor={({ id }, index) => id}\n                    renderItem={({ item }) => (\n                        <View style={styles.image1Row}>\n                            <Image\n                                source={require(\"../assets/images/image_uZOV..png\")}\n                                resizeMode=\"contain\"\n                                style={styles.image1}\n                            ></Image>\n                            <View style={styles.dateTimeColumn}>\n                                <Text style={styles.dateTime}>{item.date}/{item.time}</Text>\n                                <CupertinoButtonBlackTextColor2\n                                    style={styles.cupertinoButtonBlackTextColor2}\n                                ></CupertinoButtonBlackTextColor2>\n                            </View>\n                        </View>\n                    )}\n                />)}\n            </ImageBackground>\n        </View>\n    )\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1\n    },\n    image: {\n        height: 885,\n        width: 628,\n        alignSelf: \"center\"\n    },\n    image_imageStyle: {},\n    image1: {\n        height: 153,\n        width: 133\n    },\n    dateTime: {\n        fontFamily: \"roboto-regular\",\n        color: \"#121212\",\n        fontSize: 15,\n        alignItems:\"center\"\n    },\n    cupertinoButtonBlackTextColor2: {\n        height: 44,\n        width: 100,\n        marginTop: 14,\n        marginLeft: 2\n    },\n    dateTimeColumn: {\n        width: 111,\n        marginLeft: 10,\n        marginTop: 34,\n        marginBottom: 32\n    },\n    image1Row: {\n        height: 153,\n        flexDirection: \"row\",\n        marginTop: 155,\n        marginLeft: 147,\n        marginRight: 227\n    },\n    image2: {\n        height: 153,\n        width: 133\n    },\n    dateTime2: {\n        fontFamily: \"roboto-regular\",\n        color: \"#121212\",\n        fontSize: 24\n    },\n    cupertinoButtonBlackTextColor3: {\n        height: 44,\n        width: 100,\n        marginTop: 9,\n        marginLeft: 4\n    },\n    dateTime2Column: {\n        width: 107,\n        marginLeft: 12,\n        marginTop: 24,\n        marginBottom: 47\n    },\n    image2Row: {\n        height: 153,\n        flexDirection: \"row\",\n        marginTop: 22,\n        marginLeft: 147,\n        marginRight: 229\n    }\n});\n\nexport default TestPage;\n"]},"metadata":{},"sourceType":"module"}
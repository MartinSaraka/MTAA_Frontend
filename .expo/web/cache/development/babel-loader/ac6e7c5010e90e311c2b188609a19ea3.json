{"ast":null,"code":"import NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport MediaStream from \"./MediaStream\";\nimport MediaStreamError from \"./MediaStreamError\";\nvar WebRTCModule = NativeModules.WebRTCModule;\nexport default function getDisplayMedia() {\n  return new Promise(function (resolve, reject) {\n    WebRTCModule.getDisplayMedia().then(function (data) {\n      var streamId = data.streamId,\n          track = data.track;\n      var info = {\n        streamId: streamId,\n        streamReactTag: streamId,\n        tracks: [track]\n      };\n      var stream = new MediaStream(info);\n      resolve(stream);\n    }, function (error) {\n      reject(new MediaStreamError(error));\n    });\n  });\n}","map":{"version":3,"sources":["getDisplayMedia.ts"],"names":["WebRTCModule","data","track","info","streamId","streamReactTag","tracks","stream","resolve","error","reject"],"mappings":";AAGA,OAAA,WAAA;AACA,OAAA,gBAAA;AAEA,IAAQA,YAAR,GAAA,aAAA,CAAQA,YAAR;AAEA,eAAe,SAAA,eAAA,GAA2B;AACtC,SAAO,IAAA,OAAA,CAAY,UAAA,OAAA,EAAA,MAAA,EAAqB;AACpCA,IAAAA,YAAY,CAAZA,eAAAA,GAAAA,IAAAA,CACIC,UAAAA,IAAI,EAAI;AACJ,UAAM,QAAN,GAAA,IAAA,CAAM,QAAN;AAAA,UAAkBC,KAAlB,GAAA,IAAA,CAAkBA,KAAlB;AAEA,UAAMC,IAAI,GAAG;AACTC,QAAAA,QAAQ,EADC,QAAA;AAETC,QAAAA,cAAc,EAFL,QAAA;AAGTC,QAAAA,MAAM,EAAE,CAAA,KAAA;AAHC,OAAb;AAMA,UAAMC,MAAM,GAAG,IAAA,WAAA,CAAf,IAAe,CAAf;AAEAC,MAAAA,OAAO,CAAPA,MAAO,CAAPA;AAZRR,KAAAA,EAcIS,UAAAA,KAAK,EAAI;AACLC,MAAAA,MAAM,CAAC,IAAA,gBAAA,CAAPA,KAAO,CAAD,CAANA;AAfRV,KAAAA;AADJ,GAAO,CAAP;AAoBH","sourcesContent":["\nimport { NativeModules } from 'react-native';\n\nimport MediaStream from './MediaStream';\nimport MediaStreamError from './MediaStreamError';\n\nconst { WebRTCModule } = NativeModules;\n\nexport default function getDisplayMedia() {\n    return new Promise((resolve, reject) => {\n        WebRTCModule.getDisplayMedia().then(\n            data => {\n                const { streamId, track } = data;\n\n                const info = {\n                    streamId: streamId,\n                    streamReactTag: streamId,\n                    tracks: [track]\n                };\n\n                const stream = new MediaStream(info);\n\n                resolve(stream);\n            },\n            error => {\n                reject(new MediaStreamError(error));\n            }\n        );\n    });\n}\n"]},"metadata":{},"sourceType":"module"}
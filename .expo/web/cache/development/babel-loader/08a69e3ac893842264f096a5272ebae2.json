{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar TestPage = function TestPage() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  var getTrainings = function getTrainings() {\n    var response, json;\n    return _regeneratorRuntime.async(function getTrainings$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch('http://127.0.0.1:8000/CHbUs3NTcHrH08PNHZsa1BsKFSkQgvZx/trainings'));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            json = _context.sent;\n            setData(json.trainings);\n            console.log(json.trainings);\n            _context.next = 14;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 14:\n            _context.prev = 14;\n            setLoading(false);\n            return _context.finish(14);\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 11, 14, 17]], Promise);\n  };\n\n  useEffect(function () {\n    getTrainings();\n  }, []);\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      padding: 24\n    },\n    children: [_jsx(Text, {\n      children: \"Test\"\n    }), isLoading ? _jsx(ActivityIndicator, {}) : _jsx(FlatList, {\n      data: data,\n      keyExtractor: function keyExtractor(_ref, index) {\n        var id = _ref.id;\n        return id;\n      },\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return _jsxs(Text, {\n          children: [item.id, \", \", item.title, \", test\"]\n        });\n      }\n    }), _jsx(Text, {\n      children: \"Test\"\n    })]\n  });\n};\n\nexport default TestPage;","map":{"version":3,"sources":["/Users/timotejsmolen/WebstormProjects/untitled2/src/screens/TestPage.js"],"names":["React","useEffect","useState","TestPage","isLoading","setLoading","data","setData","getTrainings","fetch","response","json","trainings","console","log","error","flex","padding","index","id","item","title"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;;;AAGA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACnB,kBAAgCD,QAAQ,CAAC,IAAD,CAAxC;AAAA;AAAA,MAAOE,SAAP;AAAA,MAAkBC,UAAlB;;AACA,mBAAwBH,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOI,IAAP;AAAA,MAAaC,OAAb;;AAEA,MAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEUC,KAAK,CAAC,kEAAD,CAFf;;AAAA;AAEPC,YAAAA,QAFO;AAAA;AAAA,6CAGMA,QAAQ,CAACC,IAAT,EAHN;;AAAA;AAGPA,YAAAA,IAHO;AAIbJ,YAAAA,OAAO,CAACI,IAAI,CAACC,SAAN,CAAP;AACAC,YAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACC,SAAjB;AALa;AAAA;;AAAA;AAAA;AAAA;AAObC,YAAAA,OAAO,CAACE,KAAR;;AAPa;AAAA;AASbV,YAAAA,UAAU,CAAC,KAAD,CAAV;AATa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAaAJ,EAAAA,SAAS,CAAC,YAAM;AACZO,IAAAA,YAAY;AACf,GAFQ,EAEN,EAFM,CAAT;AAIA,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEQ,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,OAAO,EAAE;AAApB,KAAb;AAAA,eACI,KAAC,IAAD;AAAA;AAAA,MADJ,EAEKb,SAAS,GAAG,KAAC,iBAAD,KAAH,GACN,KAAC,QAAD;AACI,MAAA,IAAI,EAAEE,IADV;AAEI,MAAA,YAAY,EAAE,4BAASY,KAAT;AAAA,YAAGC,EAAH,QAAGA,EAAH;AAAA,eAAmBA,EAAnB;AAAA,OAFlB;AAGI,MAAA,UAAU,EAAE;AAAA,YAAGC,IAAH,SAAGA,IAAH;AAAA,eACR,MAAC,IAAD;AAAA,qBAAOA,IAAI,CAACD,EAAZ,QAAkBC,IAAI,CAACC,KAAvB;AAAA,UADQ;AAAA;AAHhB,MAHR,EAWI,KAAC,IAAD;AAAA;AAAA,MAXJ;AAAA,IADJ;AAeH,CApCD;;AAsCA,eAAelB,QAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { ActivityIndicator, FlatList, Text, View } from 'react-native';\n\nconst TestPage = () => {\n    const [isLoading, setLoading] = useState(true);\n    const [data, setData] = useState([]);\n\n    const getTrainings = async () => {\n        try {\n            const response = await fetch('http://127.0.0.1:8000/CHbUs3NTcHrH08PNHZsa1BsKFSkQgvZx/trainings');\n            const json = await response.json();\n            setData(json.trainings);\n            console.log(json.trainings)\n        } catch (error) {\n            console.error(error);\n        } finally {\n            setLoading(false);\n        }\n    }\n\n    useEffect(() => {\n        getTrainings();\n    }, []);\n\n    return (\n        <View style={{ flex: 1, padding: 24 }}>\n            <Text>Test</Text>\n            {isLoading ? <ActivityIndicator/> : (\n                <FlatList\n                    data={data}\n                    keyExtractor={({ id }, index) => id}\n                    renderItem={({ item }) => (\n                        <Text>{item.id}, {item.title}, test</Text>\n                    )}\n                />\n            )}\n            <Text>Test</Text>\n        </View>\n    );\n};\n\nexport default TestPage;\n"]},"metadata":{},"sourceType":"module"}
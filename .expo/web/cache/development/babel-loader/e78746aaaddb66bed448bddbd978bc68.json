{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport CupertinoButtonBlackTextColor2 from \"../components/CupertinoButtonBlackTextColor2\";\nimport Training_Get from \"../components/TrainingsGet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar TrainingsPage = function TrainingsPage() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  var getTrainings = function getTrainings() {\n    var response, json;\n    return _regeneratorRuntime.async(function getTrainings$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch('http://127.0.0.1:8000/CHbUs3NTcHrH08PNHZsa1BsKFSkQgvZx/trainings'));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            json = _context.sent;\n            setData(json.training);\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 13:\n            _context.prev = 13;\n            setLoading(false);\n            return _context.finish(13);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10, 13, 16]], Promise);\n  };\n\n  useEffect(function () {\n    getTrainings();\n  }, []);\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(ImageBackground, {\n      source: require(\"../assets/images/image_JMVe..png\"),\n      resizeMode: \"contain\",\n      style: styles.image,\n      imageStyle: styles.image_imageStyle,\n      children: isLoading ? _jsx(ActivityIndicator, {}) : _jsx(FlatList, {\n        data: data,\n        keyExtractor: function keyExtractor(_ref, index) {\n          var id = _ref.id;\n          return id;\n        },\n        renderItem: function renderItem(_ref2) {\n          var item = _ref2.item;\n          return _jsxs(View, {\n            style: styles.image1Row,\n            children: [_jsx(Image, {\n              source: require(\"../assets/images/image_uZOV..png\"),\n              resizeMode: \"contain\",\n              style: styles.image1\n            }), _jsxs(View, {\n              style: styles.dateTimeColumn,\n              children: [_jsx(Text, {\n                style: styles.titleTraining,\n                children: item.title\n              }), _jsxs(Text, {\n                style: styles.dateTime,\n                children: [item.date, \" \", item.time]\n              }), _jsx(TouchableOpacity, {\n                style: [styles.container_button, styles.cupertinoButtonBlackTextColor2],\n                onPress: function onPress() {\n                  fetch('http://127.0.0.1:8000/CHbUs3NTcHrH08PNHZsa1BsKFSkQgvZx/trainings/signup', {\n                    method: 'POST',\n                    headers: {\n                      Accept: 'application/json',\n                      'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                      user: 7,\n                      training: item.id\n                    })\n                  });\n                  alert(\"Prihlásený!\");\n                },\n                children: _jsxs(Text, {\n                  style: styles.caption,\n                  children: [\"Prihl\\xE1si\\u0165 sa\", \"\\n\", \"na tr\\xE9ning\"]\n                })\n              })]\n            })]\n          });\n        }\n      })\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    borderColor: \"black\"\n  },\n  image: {\n    height: 885,\n    width: 628,\n    alignSelf: \"center\"\n  },\n  image_imageStyle: {},\n  image1: {\n    height: 153,\n    width: 133\n  },\n  titleTraining: {\n    fontFamily: \"roboto-regular\",\n    color: \"#121212\",\n    fontSize: 25,\n    fontWeight: \"bold\",\n    alignItems: \"center\",\n    marginLeft: 15,\n    marginBotton: 10\n  },\n  dateTime: {\n    fontFamily: \"roboto-regular\",\n    color: \"#121212\",\n    fontSize: 15,\n    alignItems: \"center\",\n    margin: 10\n  },\n  cupertinoButtonBlackTextColor2: {\n    height: 44,\n    width: 100,\n    marginLeft: 2\n  },\n  dateTimeColumn: {\n    width: 111,\n    marginLeft: 10,\n    marginTop: 34,\n    marginBottom: 32\n  },\n  image1Row: {\n    height: 153,\n    flexDirection: \"row\",\n    marginTop: 155,\n    marginLeft: 147,\n    marginRight: 227,\n    borderColor: \"black\"\n  },\n  image2: {\n    height: 153,\n    width: 133\n  },\n  dateTime2: {\n    fontFamily: \"roboto-regular\",\n    color: \"#121212\",\n    fontSize: 24\n  },\n  cupertinoButtonBlackTextColor3: {\n    height: 44,\n    width: 100,\n    marginTop: 9,\n    marginLeft: 4\n  },\n  dateTime2Column: {\n    width: 107,\n    marginLeft: 12,\n    marginTop: 24,\n    marginBottom: 47\n  },\n  image2Row: {\n    height: 153,\n    flexDirection: \"row\",\n    marginTop: 22,\n    marginLeft: 147,\n    marginRight: 229\n  },\n  container_button: {\n    backgroundColor: \"gray\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    borderRadius: 5\n  },\n  caption: {\n    color: \"#000\",\n    fontSize: 17,\n    textAlign: \"center\"\n  }\n});\nexport default TrainingsPage;","map":{"version":3,"sources":["C:/Users/sacre/AwesomeProject/src/screens/TrainingsPage.js"],"names":["React","useEffect","useState","CupertinoButtonBlackTextColor2","Training_Get","TrainingsPage","isLoading","setLoading","data","setData","getTrainings","fetch","response","json","training","console","error","styles","container","require","image","image_imageStyle","index","id","item","image1Row","image1","dateTimeColumn","titleTraining","title","dateTime","date","time","container_button","cupertinoButtonBlackTextColor2","method","headers","Accept","body","JSON","stringify","user","alert","caption","StyleSheet","create","flex","borderColor","height","width","alignSelf","fontFamily","color","fontSize","fontWeight","alignItems","marginLeft","marginBotton","margin","marginTop","marginBottom","flexDirection","marginRight","image2","dateTime2","cupertinoButtonBlackTextColor3","dateTime2Column","image2Row","backgroundColor","justifyContent","borderRadius","textAlign"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n    ActivityIndicator,\r\n    FlatList,\r\n    StyleSheet,\r\n    Text,\r\n    View,\r\n    Image,\r\n    ImageBackground,\r\n    Button,\r\n    TouchableOpacity,\r\n    Alert\r\n} from 'react-native';\r\nimport CupertinoButtonBlackTextColor2 from \"../components/CupertinoButtonBlackTextColor2\";\r\nimport Training_Get from \"../components/TrainingsGet\";\r\n\r\n\r\nconst TrainingsPage = () => {\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [data, setData] = useState([]);\r\n\r\n    const getTrainings = async () => {\r\n        try {\r\n            const response = await fetch('http://127.0.0.1:8000/CHbUs3NTcHrH08PNHZsa1BsKFSkQgvZx/trainings');\r\n            const json = await response.json();\r\n            setData(json.training);\r\n        } catch (error) {\r\n            console.error(error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getTrainings();\r\n    }, []);\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <ImageBackground\r\n                source={require(\"../assets/images/image_JMVe..png\")}\r\n                resizeMode=\"contain\"\r\n                style={styles.image}\r\n                imageStyle={styles.image_imageStyle}\r\n            >\r\n            {isLoading ? <ActivityIndicator/> : (\r\n                <FlatList\r\n                    data={data}\r\n                    keyExtractor={({ id }, index) => id}\r\n                    renderItem={({ item }) => (\r\n                        <View style={styles.image1Row}>\r\n                            <Image\r\n                                source={require(\"../assets/images/image_uZOV..png\")}\r\n                                resizeMode=\"contain\"\r\n                                style={styles.image1}\r\n                            ></Image>\r\n\r\n                            <View style={styles.dateTimeColumn}>\r\n                                <Text style={styles.titleTraining}>{item.title}</Text>\r\n                                <Text style={styles.dateTime}>{item.date} {item.time}</Text>\r\n                                <TouchableOpacity style={[styles.container_button, styles.cupertinoButtonBlackTextColor2]}\r\n                                                  onPress={() => {fetch('http://127.0.0.1:8000/CHbUs3NTcHrH08PNHZsa1BsKFSkQgvZx/trainings/signup', {\r\n                                                          method: 'POST',\r\n                                                          headers: {\r\n                                                              Accept: 'application/json',\r\n                                                              'Content-Type': 'application/json'\r\n                                                          },\r\n                                                          body: JSON.stringify({\r\n                                                              user: 7,\r\n                                                              training: item.id\r\n                                                          })\r\n                                                  });alert(\"Prihlásený!\")}}>\r\n\r\n                                    <Text style={styles.caption}>Prihlásiť sa{\"\\n\"}na tréning</Text>\r\n                                </TouchableOpacity>\r\n                            </View>\r\n                        </View>\r\n                    )}\r\n                />)}\r\n            </ImageBackground>\r\n        </View>\r\n    )\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        borderColor: \"black\"\r\n    },\r\n    image: {\r\n        height: 885,\r\n        width: 628,\r\n        alignSelf: \"center\"\r\n    },\r\n    image_imageStyle: {},\r\n    image1: {\r\n        height: 153,\r\n        width: 133\r\n    },\r\n    titleTraining: {\r\n        fontFamily: \"roboto-regular\",\r\n        color: \"#121212\",\r\n        fontSize: 25,\r\n        fontWeight: \"bold\",\r\n        alignItems:\"center\",\r\n        marginLeft:15,\r\n        marginBotton: 10\r\n    },\r\n    dateTime: {\r\n        fontFamily: \"roboto-regular\",\r\n        color: \"#121212\",\r\n        fontSize: 15,\r\n        alignItems:\"center\",\r\n        margin:10\r\n    },\r\n    cupertinoButtonBlackTextColor2: {\r\n        height: 44,\r\n        width: 100,\r\n        marginLeft: 2\r\n    },\r\n    dateTimeColumn: {\r\n        width: 111,\r\n        marginLeft: 10,\r\n        marginTop: 34,\r\n        marginBottom: 32\r\n    },\r\n    image1Row: {\r\n        height: 153,\r\n        flexDirection: \"row\",\r\n        marginTop: 155,\r\n        marginLeft: 147,\r\n        marginRight: 227,\r\n        borderColor:\"black\"\r\n    },\r\n    image2: {\r\n        height: 153,\r\n        width: 133\r\n    },\r\n    dateTime2: {\r\n        fontFamily: \"roboto-regular\",\r\n        color: \"#121212\",\r\n        fontSize: 24\r\n    },\r\n    cupertinoButtonBlackTextColor3: {\r\n        height: 44,\r\n        width: 100,\r\n        marginTop: 9,\r\n        marginLeft: 4,\r\n\r\n    },\r\n    dateTime2Column: {\r\n        width: 107,\r\n        marginLeft: 12,\r\n        marginTop: 24,\r\n        marginBottom: 47\r\n    },\r\n    image2Row: {\r\n        height: 153,\r\n        flexDirection: \"row\",\r\n        marginTop: 22,\r\n        marginLeft: 147,\r\n        marginRight: 229\r\n    },\r\n        container_button: {\r\n            backgroundColor: \"gray\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            flexDirection: \"row\",\r\n            borderRadius: 5\r\n        },\r\n        caption: {\r\n            color: \"#000\",\r\n            fontSize: 17,\r\n            textAlign: \"center\"\r\n        }\r\n});\r\n\r\nexport default TrainingsPage;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport CupertinoButtonBlackTextColor2 from \"../components/CupertinoButtonBlackTextColor2\";\nimport Training_Get from \"../components/TrainingsGet\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar GroupPage = function GroupPage(route) {\n  console.log(route);\n  console.log(route);\n  console.log(route);\n  console.log(route);\n  console.log(route);\n  console.log(route);\n  console.log(route);\n  console.log(route);\n  console.log(route);\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  var getGroupTrainings = function getGroupTrainings() {\n    var response, json;\n    return _regeneratorRuntime.async(function getGroupTrainings$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(\"http://127.0.0.1:8000/\" + userToken + \"/trainings/grouptrainings\"));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            json = _context.sent;\n            setData(json);\n            console.log(data);\n            _context.next = 14;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 14:\n            _context.prev = 14;\n            setLoading(false);\n            return _context.finish(14);\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 11, 14, 17]], Promise);\n  };\n\n  useEffect(function () {\n    getGroupTrainings();\n  }, []);\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(ImageBackground, {\n      source: require(\"../assets/images/image_rjQC..png\"),\n      resizeMode: \"contain\",\n      style: styles.image,\n      imageStyle: styles.image_imageStyle,\n      children: [_jsxs(Text, {\n        style: styles.dateTime2,\n        children: [\"Pripojte sa na\", \"\\n\", \"n\\xE1\\u0161 skupinov\\xFD online\", \"\\n\", \"tr\\xE9ning pomocou \\xFA\\u017Easnej\", \"\\n\", \"WebRTC technol\\xF3gie!\"]\n      }), isLoading ? _jsx(ActivityIndicator, {}) : _jsxs(View, {\n        style: styles.image1Row,\n        children: [_jsx(Image, {\n          style: {\n            width: 150,\n            height: 150\n          },\n          source: {\n            uri: data.image\n          }\n        }), _jsxs(View, {\n          style: styles.dateTimeColumn,\n          children: [_jsx(Text, {\n            style: styles.titleTraining,\n            children: data.date\n          }), _jsx(Text, {\n            style: styles.titleTraining,\n            children: data.time\n          })]\n        })]\n      })]\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    borderColor: \"black\"\n  },\n  image: {\n    height: 885,\n    width: 628,\n    alignSelf: \"center\"\n  },\n  image_imageStyle: {},\n  image1: {\n    height: 153,\n    width: 133\n  },\n  titleTraining: {\n    fontFamily: \"roboto-regular\",\n    color: \"#121212\",\n    fontSize: 25,\n    fontWeight: \"bold\",\n    alignItems: \"center\",\n    marginLeft: 15,\n    marginBottom: 10,\n    width: 3000\n  },\n  titleH: {\n    fontFamily: \"roboto-regular\",\n    color: \"#121212\",\n    fontSize: 25,\n    alignItems: \"center\",\n    width: 30\n  },\n  dateTime: {\n    fontFamily: \"roboto-regular\",\n    color: \"#121212\",\n    fontSize: 15,\n    alignItems: \"center\",\n    margin: 10\n  },\n  cupertinoButtonBlackTextColor2: {\n    height: 44,\n    width: 100,\n    marginLeft: 2\n  },\n  dateTimeColumn: {\n    width: 111,\n    marginLeft: 10,\n    marginTop: 34,\n    marginBottom: 32\n  },\n  image1Row: {\n    height: 153,\n    flexDirection: \"row\",\n    marginTop: 155,\n    marginLeft: 147,\n    marginRight: 227,\n    borderColor: \"black\"\n  },\n  image2: {\n    height: 153,\n    width: 133\n  },\n  dateTime2: {\n    fontFamily: \"roboto-regular\",\n    color: \"#121212\",\n    fontSize: 24,\n    marginLeft: 200,\n    alignContent: \"center\",\n    marginTop: 100\n  },\n  cupertinoButtonBlackTextColor3: {\n    height: 44,\n    width: 100,\n    marginTop: 9,\n    marginLeft: 4\n  },\n  dateTime2Column: {\n    width: 107,\n    marginLeft: 12,\n    marginTop: 24,\n    marginBottom: 47\n  },\n  image2Row: {\n    height: 153,\n    flexDirection: \"row\",\n    marginTop: 22,\n    marginLeft: 147,\n    marginRight: 229\n  },\n  container_button: {\n    backgroundColor: \"gray\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    borderRadius: 5\n  },\n  caption: {\n    color: \"#000\",\n    fontSize: 17,\n    textAlign: \"center\"\n  }\n});\nexport default GroupPage;","map":{"version":3,"sources":["C:/Users/sacre/AwesomeProject/src/screens/GroupPage.js"],"names":["React","useEffect","useState","CupertinoButtonBlackTextColor2","Training_Get","GroupPage","route","console","log","isLoading","setLoading","data","setData","getGroupTrainings","fetch","userToken","response","json","error","styles","container","require","image","image_imageStyle","dateTime2","image1Row","width","height","uri","dateTimeColumn","titleTraining","date","time","StyleSheet","create","flex","borderColor","alignSelf","image1","fontFamily","color","fontSize","fontWeight","alignItems","marginLeft","marginBottom","titleH","dateTime","margin","cupertinoButtonBlackTextColor2","marginTop","flexDirection","marginRight","image2","alignContent","cupertinoButtonBlackTextColor3","dateTime2Column","image2Row","container_button","backgroundColor","justifyContent","borderRadius","caption","textAlign"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n    ActivityIndicator,\r\n    FlatList,\r\n    StyleSheet,\r\n    Text,\r\n    View,\r\n    Image,\r\n    ImageBackground,\r\n    Button,\r\n    TouchableOpacity\r\n} from 'react-native';\r\nimport CupertinoButtonBlackTextColor2 from \"../components/CupertinoButtonBlackTextColor2\";\r\nimport Training_Get from \"../components/TrainingsGet\";\r\n\r\n\r\n\r\nconst GroupPage = (route) => {\r\n    console.log(route)\r\n    console.log(route)\r\n    console.log(route)\r\n    console.log(route)\r\n\r\n    console.log(route)\r\n    \r\n\r\n    console.log(route)\r\n    console.log(route)\r\n    console.log(route)\r\n    console.log(route)\r\n    \r\n    const [isLoading, setLoading] = useState(true);\r\n    const [data, setData] = useState([]);\r\n\r\n    const getGroupTrainings = async () => {\r\n        try {\r\n            const response = await fetch(`http://127.0.0.1:8000/${userToken}/trainings/grouptrainings`);\r\n            const json = await response.json();\r\n            setData(json);\r\n            console.log(data)\r\n        } catch (error) {\r\n            console.error(error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getGroupTrainings();\r\n    }, []);\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <ImageBackground\r\n                source={require(\"../assets/images/image_rjQC..png\")}\r\n                resizeMode=\"contain\"\r\n                style={styles.image}\r\n                imageStyle={styles.image_imageStyle}\r\n            ><Text style={styles.dateTime2}>Pripojte sa na{\"\\n\"}náš skupinový online{\"\\n\"}tréning pomocou úžasnej{\"\\n\"}WebRTC technológie!</Text>\r\n                {isLoading ? <ActivityIndicator/> : (\r\n\r\n\r\n                            <View style={styles.image1Row}>\r\n                                <Image style={{width: 150, height: 150}} source={{uri: data.image}}/>\r\n\r\n                                <View style={styles.dateTimeColumn}>\r\n                                    <Text style={styles.titleTraining}>{data.date}</Text>\r\n                                    <Text style={styles.titleTraining}>{data.time}</Text>\r\n                                </View>\r\n                            </View>\r\n                    )}\r\n            </ImageBackground>\r\n        </View>\r\n    )\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        borderColor: \"black\"\r\n    },\r\n    image: {\r\n        height: 885,\r\n        width: 628,\r\n        alignSelf: \"center\"\r\n    },\r\n    image_imageStyle: {},\r\n    image1: {\r\n        height: 153,\r\n        width: 133\r\n    },\r\n    titleTraining: {\r\n        fontFamily: \"roboto-regular\",\r\n        color: \"#121212\",\r\n        fontSize: 25,\r\n        fontWeight: \"bold\",\r\n        alignItems:\"center\",\r\n        marginLeft:15,\r\n        marginBottom: 10,\r\n        width: 3000\r\n    },\r\n    titleH: {\r\n        fontFamily: \"roboto-regular\",\r\n        color: \"#121212\",\r\n        fontSize: 25,\r\n        alignItems:\"center\",\r\n        width: 30\r\n    },\r\n    dateTime: {\r\n        fontFamily: \"roboto-regular\",\r\n        color: \"#121212\",\r\n        fontSize: 15,\r\n        alignItems:\"center\",\r\n        margin:10\r\n    },\r\n    cupertinoButtonBlackTextColor2: {\r\n        height: 44,\r\n        width: 100,\r\n        marginLeft: 2\r\n    },\r\n    dateTimeColumn: {\r\n        width: 111,\r\n        marginLeft: 10,\r\n        marginTop: 34,\r\n        marginBottom: 32\r\n    },\r\n    image1Row: {\r\n        height: 153,\r\n        flexDirection: \"row\",\r\n        marginTop: 155,\r\n        marginLeft: 147,\r\n        marginRight: 227,\r\n        borderColor:\"black\"\r\n    },\r\n    image2: {\r\n        height: 153,\r\n        width: 133\r\n    },\r\n    dateTime2: {\r\n        fontFamily: \"roboto-regular\",\r\n        color: \"#121212\",\r\n        fontSize: 24,\r\n        marginLeft: 200,\r\n        alignContent:\"center\",\r\n        marginTop: 100\r\n    },\r\n    cupertinoButtonBlackTextColor3: {\r\n        height: 44,\r\n        width: 100,\r\n        marginTop: 9,\r\n        marginLeft: 4,\r\n\r\n    },\r\n    dateTime2Column: {\r\n        width: 107,\r\n        marginLeft: 12,\r\n        marginTop: 24,\r\n        marginBottom: 47\r\n    },\r\n    image2Row: {\r\n        height: 153,\r\n        flexDirection: \"row\",\r\n        marginTop: 22,\r\n        marginLeft: 147,\r\n        marginRight: 229\r\n    },\r\n    container_button: {\r\n        backgroundColor: \"gray\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"row\",\r\n        borderRadius: 5\r\n    },\r\n    caption: {\r\n        color: \"#000\",\r\n        fontSize: 17,\r\n        textAlign: \"center\"\r\n    }\r\n});\r\n\r\nexport default GroupPage;\r\n"]},"metadata":{},"sourceType":"module"}
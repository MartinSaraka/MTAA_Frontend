{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { Component, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport DocumentPicker from 'react-native-document-picker';\nimport * as ImagePicker from \"expo-image-picker\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ChangeGroupPage = function ChangeGroupPage(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var userToken = 'i5aQSJUTBmb5ktDpDw7RQyMQar5EqzUq';\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      time = _useState2[0],\n      setTime = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      date = _useState4[0],\n      setDate = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      image = _useState6[0],\n      setImage = _useState6[1];\n\n  var pickImage = function pickImage() {\n    var result;\n    return _regeneratorRuntime.async(function pickImage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context.sent;\n            global.image = result;\n            console.log(result);\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n            }\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(ImageBackground, {\n      source: require(\"../assets/images/image_rjQC..png\"),\n      resizeMode: \"contain\",\n      style: styles.image1,\n      imageStyle: styles.image1_imageStyle,\n      children: [_jsx(Text, {\n        style: styles.casTreningu1,\n        children: \"\\u010Cas tr\\xE9ningu\"\n      }), _jsx(View, {\n        style: styles.SectionStyle,\n        children: _jsx(TextInput, {\n          style: styles.inputStyle,\n          onChangeText: function onChangeText(time) {\n            return setTime(time);\n          },\n          underlineColorAndroid: \"#f000\",\n          placeholder: \"Zadaj \\u010Das\",\n          placeholderTextColor: \"#8b9cb5\",\n          returnKeyType: \"next\",\n          blurOnSubmit: false\n        })\n      }), _jsx(Text, {\n        style: styles.datumTreningu1,\n        children: \"D\\xE1tum tr\\xE9ningu\"\n      }), _jsx(View, {\n        style: styles.SectionStyle,\n        children: _jsx(TextInput, {\n          style: styles.inputStyle,\n          onChangeText: function onChangeText(date) {\n            return setDate(date);\n          },\n          underlineColorAndroid: \"#f000\",\n          placeholder: \"Zadaj d\\xE1tum\",\n          placeholderTextColor: \"#8b9cb5\",\n          returnKeyType: \"next\",\n          blurOnSubmit: false\n        })\n      }), _jsx(Button, {\n        title: \"Pick an image from camera roll\",\n        onPress: pickImage\n      }), image && _jsx(Image, {\n        source: {\n          uri: image\n        },\n        style: {\n          width: 200,\n          height: 200\n        }\n      }), _jsx(TouchableOpacity, {\n        style: styles.materialButtonViolet,\n        onPress: function onPress() {\n          fetch(\"http://127.0.0.1:8000/admin/\" + userToken + \"/grouptrainings\", {\n            method: 'PUT',\n            headers: {\n              Accept: 'application/json',\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              image: image,\n              date: date,\n              time: time\n            })\n          }).then(function _callee(response) {\n            var data, error;\n            return _regeneratorRuntime.async(function _callee$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    _context2.next = 2;\n                    return _regeneratorRuntime.awrap(response.status);\n\n                  case 2:\n                    data = _context2.sent;\n                    console.log(data);\n\n                    if (response.ok) {\n                      _context2.next = 12;\n                      break;\n                    }\n\n                    console.error('bbbbbbbbbbbbbbbbbbbbbbbbbbbb');\n                    console.log('Skontrulujte si svoje meno a heslo');\n                    alert('Nesprávny vstup');\n                    error = data && data.message || response.status;\n                    return _context2.abrupt(\"return\", Promise.reject(error));\n\n                  case 12:\n                    alert(\"Zmenený tréning\");\n\n                  case 13:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          }).catch(function (error) {\n            console.log(error);\n            console.error('halo je tu error!');\n          });\n        },\n        children: _jsx(Text, {\n          style: styles.zmenitTrening,\n          children: \"Zmeni\\u0165 tr\\xE9ning\"\n        })\n      })]\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  image1: {\n    height: 865,\n    width: 843,\n    marginLeft: -234\n  },\n  image1_imageStyle: {},\n  nazovTreningu1: {\n    fontFamily: \"roboto-regular\",\n    color: \"#121212\",\n    fontSize: 26,\n    marginTop: 190,\n    marginLeft: 244\n  },\n  materialUnderlineTextbox1: {\n    height: 43,\n    width: 360,\n    backgroundColor: \"rgba(155,155,155,1)\",\n    marginTop: 13,\n    marginLeft: 244\n  },\n  casTreningu1: {\n    fontFamily: \"roboto-regular\",\n    color: \"#121212\",\n    fontSize: 26,\n    marginTop: 13,\n    marginLeft: 244\n  },\n  materialUnderlineTextbox2: {\n    height: 43,\n    width: 360,\n    backgroundColor: \"rgba(155,155,155,1)\",\n    marginLeft: 242\n  },\n  datumTreningu1: {\n    fontFamily: \"roboto-regular\",\n    color: \"#121212\",\n    fontSize: 26,\n    marginTop: 11,\n    marginLeft: 244\n  },\n  materialUnderlineTextbox3: {\n    height: 43,\n    width: 360,\n    backgroundColor: \"rgba(155,155,155,1)\",\n    marginLeft: 242\n  },\n  inputStyle: {\n    flex: 1,\n    color: 'white',\n    paddingLeft: 15,\n    paddingRight: 15,\n    borderWidth: 1,\n    borderRadius: 30,\n    borderColor: '#dadae8',\n    width: 100\n  },\n  materialButtonViolet: {\n    height: 51,\n    width: 124,\n    backgroundColor: \"rgba(65,117,5,1)\",\n    marginTop: 25,\n    marginLeft: 450\n  },\n  buttonStyle: {\n    backgroundColor: '#307ecc',\n    borderWidth: 0,\n    color: '#FFFFFF',\n    borderColor: '#307ecc',\n    height: 40,\n    alignItems: 'center',\n    borderRadius: 30,\n    marginLeft: 35,\n    marginRight: 35,\n    marginTop: 15\n  },\n  buttonTextStyle: {\n    color: '#FFFFFF',\n    paddingVertical: 10,\n    fontSize: 16\n  },\n  SectionStyle: {\n    flexDirection: 'row',\n    height: 40,\n    width: 340,\n    marginTop: 20,\n    marginLeft: 10,\n    marginRight: 35,\n    margin: 10,\n    alignSelf: \"center\"\n  },\n  zmenitTrening: {\n    color: \"#fff\",\n    fontSize: 14\n  }\n});\nexport default ChangeGroupPage;","map":{"version":3,"sources":["/Users/timotejsmolen/WebstormProjects/untitled2/src/screens/ChangeGroupPage.js"],"names":["React","Component","useState","DocumentPicker","ImagePicker","ChangeGroupPage","navigation","route","userToken","time","setTime","date","setDate","image","setImage","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","global","console","log","cancelled","uri","styles","container","require","image1","image1_imageStyle","casTreningu1","SectionStyle","inputStyle","datumTreningu1","width","height","materialButtonViolet","fetch","method","headers","Accept","body","JSON","stringify","then","response","status","data","ok","error","alert","message","Promise","reject","catch","zmenitTrening","StyleSheet","create","flex","marginLeft","nazovTreningu1","fontFamily","color","fontSize","marginTop","materialUnderlineTextbox1","backgroundColor","materialUnderlineTextbox2","materialUnderlineTextbox3","paddingLeft","paddingRight","borderWidth","borderRadius","borderColor","buttonStyle","alignItems","marginRight","buttonTextStyle","paddingVertical","flexDirection","margin","alignSelf"],"mappings":"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","sourcesContent":["import React, { Component,useState } from \"react\";\nimport {StyleSheet, View, Image, ImageBackground, TextInput, Text, TouchableOpacity, Button} from \"react-native\";\nimport DocumentPicker from 'react-native-document-picker';\nimport * as ImagePicker from \"expo-image-picker\";\n\nconst ChangeGroupPage = ({navigation, route}) => {\n    //let userToken = route.params['userToken']\n    let userToken = 'i5aQSJUTBmb5ktDpDw7RQyMQar5EqzUq'\n    const [time, setTime] = useState('');\n    const [date, setDate] = useState('');\n    /*\n    const [singleFile, setSingleFile] = useState(null);\n    //kód na súbory prevzatý z https://aboutreact.com/file-uploading-in-react-native/\n    const uploadImage = async () => {\n        // Check if any file is selected or not\n        if (singleFile != null) {\n            // If file selected then create FormData\n            const fileToUpload = singleFile;\n            const data = new FormData();\n            data.append('name', 'Image Upload');\n            data.append('file_attachment', fileToUpload);\n            // Please change file upload URL\n            let res = await fetch(\n                'http://localhost/upload.php',\n                {\n                    method: 'post',\n                    body: data,\n                    headers: {\n                        'Content-Type': 'multipart/form-data; ',\n                    },\n                }\n            );\n            let responseJson = await res.json();\n            if (responseJson.status == 1) {\n                alert('Upload Successful');\n            }\n        } else {\n            // If no file selected the show alert\n            alert('Please Select File first');\n        }\n    };\n\n    const selectFile = async () => {\n        // Opening Document Picker to select one file\n        try {\n            const res = await DocumentPicker.pickSingle({\n                // Provide which type of file you want user to pick\n                type: [DocumentPicker.types.allFiles],\n                presentationStyle: 'fullScreen',\n                // There can me more options as well\n                // DocumentPicker.types.allFiles\n                // DocumentPicker.types.images\n                // DocumentPicker.types.plainText\n                // DocumentPicker.types.audio\n                // DocumentPicker.types.pdf\n            });\n\n            // Printing the log realted to the file\n            console.log(res)\n            console.log('res : ' + JSON.stringify(res));\n            // Setting the state to show single file attributes\n            setSingleFile(res);\n        } catch (err) {\n            setSingleFile(null);\n            // Handling any exception (If any)\n            if (DocumentPicker.isCancel(err)) {\n                // If user canceled the document selection\n                alert('Canceled');\n            } else {\n                // For Unknown Error\n                alert('Unknown Error: ' + JSON.stringify(err));\n                throw err;\n            }\n        }\n    };*/\n    const [image, setImage] = useState(null);\n\n    const pickImage = async () => {\n        // No permissions request is necessary for launching the image library\n        let result = await ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.All,\n            allowsEditing: true,\n            aspect: [4, 3],\n            quality: 1,\n        });\n        global.image = result\n        console.log(result);\n\n        if (!result.cancelled) {\n            setImage(result.uri);\n        }\n    };\n    return (\n        <View style={styles.container}\n        >\n            \n            <ImageBackground\n                source={require(\"../assets/images/image_rjQC..png\")}\n                resizeMode=\"contain\"\n                style={styles.image1}\n                imageStyle={styles.image1_imageStyle}\n            >\n\n                <Text style={styles.casTreningu1}>Čas tréningu</Text>\n                <View style={styles.SectionStyle}>\n                    <TextInput\n                        style={styles.inputStyle}\n                        onChangeText={(time) => setTime(time)}\n                        underlineColorAndroid=\"#f000\"\n                        placeholder=\"Zadaj čas\"\n                        placeholderTextColor=\"#8b9cb5\"\n                        returnKeyType=\"next\"\n                        blurOnSubmit={false}\n                    />\n                </View>\n                <Text style={styles.datumTreningu1}>Dátum tréningu</Text>\n                <View style={styles.SectionStyle}>\n                    <TextInput\n                        style={styles.inputStyle}\n                        onChangeText={(date) => setDate(date)}\n                        underlineColorAndroid=\"#f000\"\n                        placeholder=\"Zadaj dátum\"\n                        placeholderTextColor=\"#8b9cb5\"\n                        returnKeyType=\"next\"\n                        blurOnSubmit={false}\n                    />\n                </View>\n                <Button title=\"Pick an image from camera roll\" onPress={pickImage} />\n                {image && <Image source={{ uri: image }} style={{ width: 200, height: 200 }} />}\n                <TouchableOpacity\n                    style={styles.materialButtonViolet}\n\n                    onPress={() => {fetch(`http://127.0.0.1:8000/admin/${userToken}/grouptrainings`, {\n                        method: 'PUT',\n                        headers: {\n                            Accept: 'application/json',\n                            'Content-Type': 'application/json'\n                        },\n                        body: JSON.stringify({\n                            image: image,\n                            date: date,\n                            time: time\n                        })\n                    }).then(async response => {\n                        const data = await response.status;\n                        console.log(data)\n\n                        // check for error response\n                        if (!response.ok) {\n                            console.error('bbbbbbbbbbbbbbbbbbbbbbbbbbbb');\n                            console.log('Skontrulujte si svoje meno a heslo')\n                            alert('Nesprávny vstup');\n                            const error = (data && data.message) || response.status;\n                            return Promise.reject(error);\n                        }\n                        else{\n\n                            alert(\"Zmenený tréning\")\n                        }\n                    })\n                        .catch(error => {\n                            console.log(error)\n                            console.error('halo je tu error!');\n\n                        })}}>\n                    <Text style={styles.zmenitTrening}>Zmeniť tréning</Text>\n                </TouchableOpacity>\n            </ImageBackground>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1\n    },\n    image1: {\n        height: 865,\n        width: 843,\n        marginLeft: -234\n    },\n    image1_imageStyle: {},\n    nazovTreningu1: {\n        fontFamily: \"roboto-regular\",\n        color: \"#121212\",\n        fontSize: 26,\n        marginTop: 190,\n        marginLeft: 244\n    },\n    materialUnderlineTextbox1: {\n        height: 43,\n        width: 360,\n        backgroundColor: \"rgba(155,155,155,1)\",\n        marginTop: 13,\n        marginLeft: 244\n    },\n    casTreningu1: {\n        fontFamily: \"roboto-regular\",\n        color: \"#121212\",\n        fontSize: 26,\n        marginTop: 13,\n        marginLeft: 244\n    },\n    materialUnderlineTextbox2: {\n        height: 43,\n        width: 360,\n        backgroundColor: \"rgba(155,155,155,1)\",\n        marginLeft: 242\n    },\n    datumTreningu1: {\n        fontFamily: \"roboto-regular\",\n        color: \"#121212\",\n        fontSize: 26,\n        marginTop: 11,\n        marginLeft: 244\n    },\n    materialUnderlineTextbox3: {\n        height: 43,\n        width: 360,\n        backgroundColor: \"rgba(155,155,155,1)\",\n        marginLeft: 242\n    },\n    inputStyle: {\n        flex: 1,\n        color: 'white',\n        paddingLeft: 15,\n        paddingRight: 15,\n        borderWidth: 1,\n        borderRadius: 30,\n        borderColor: '#dadae8',\n        width: 100\n    },\n    materialButtonViolet: {\n        height: 51,\n        width: 124,\n        backgroundColor: \"rgba(65,117,5,1)\",\n        marginTop: 25,\n        marginLeft: 450\n    },\n    buttonStyle: {\n        backgroundColor: '#307ecc',\n        borderWidth: 0,\n        color: '#FFFFFF',\n        borderColor: '#307ecc',\n        height: 40,\n        alignItems: 'center',\n        borderRadius: 30,\n        marginLeft: 35,\n        marginRight: 35,\n        marginTop: 15,\n    },\n    buttonTextStyle: {\n        color: '#FFFFFF',\n        paddingVertical: 10,\n        fontSize: 16,\n    },\n    SectionStyle: {\n        flexDirection: 'row',\n        height: 40,\n        width:340,\n        marginTop: 20,\n        marginLeft: 10,\n        marginRight: 35,\n        margin: 10,\n        alignSelf:\"center\"\n    },\n    zmenitTrening: {\n        color: \"#fff\",\n        fontSize: 14\n    }\n});\n\n\nexport default ChangeGroupPage;\n"]},"metadata":{},"sourceType":"module"}
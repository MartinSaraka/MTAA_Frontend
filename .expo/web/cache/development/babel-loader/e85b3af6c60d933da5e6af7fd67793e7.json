{"ast":null,"code":"import React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport ContactPage from \"./ContactPage\";\nimport CoachPage from \"./CoachPage\";\nimport PricingPage from \"./PricingPage\";\nimport AdminTrainingPage from \"./AdminTrainingPage\";\nimport TrainingsPage from \"./TrainingsPage\";\nimport ChangeTrainingPage from \"./ChangeTrainingPage\";\nimport AddTrainingPage from \"./AddTrainingPage\";\nimport CustomSidebarMenu from \"../components/CustomSidebarMenu\";\nimport NavigationDrawerHeader from \"../components/NavigationDrawerHeader\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar Drawer = createDrawerNavigator();\n\nvar CoachPageStack = function CoachPageStack(_ref) {\n  var navigation = _ref.navigation;\n  return _jsx(Stack.Navigator, {\n    initialRouteName: \"CoachPage\",\n    children: _jsx(Stack.Screen, {\n      name: \"CoachPage\",\n      initialParams: {\n        itemId: userId,\n        userToken: userToken\n      },\n      component: CoachPage,\n      options: {\n        title: 'O nás',\n        headerLeft: function headerLeft() {\n          return _jsx(NavigationDrawerHeader, {\n            navigationProps: navigation\n          });\n        },\n        headerStyle: {\n          backgroundColor: '#307ecc'\n        },\n        headerTintColor: '#fff',\n        headerTitleStyle: {\n          fontWeight: 'bold'\n        }\n      }\n    })\n  });\n};\n\nvar ContactPageStack = function ContactPageStack(_ref2) {\n  var navigation = _ref2.navigation;\n  return _jsx(Stack.Navigator, {\n    initialRouteName: \"ContactPage\",\n    initialParams: {\n      itemId: userId,\n      userToken: userToken\n    },\n    screenOptions: {\n      headerLeft: function headerLeft() {\n        return _jsx(NavigationDrawerHeader, {\n          navigationProps: navigation\n        });\n      },\n      headerStyle: {\n        backgroundColor: '#307ecc'\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        fontWeight: 'bold'\n      }\n    },\n    children: _jsx(Stack.Screen, {\n      initialParams: {\n        itemId: userId,\n        userToken: userToken\n      },\n      name: \"ContactPage\",\n      component: ContactPage,\n      options: {\n        title: 'Kontakt'\n      }\n    })\n  });\n};\n\nvar PricingPageStack = function PricingPageStack(_ref3) {\n  var navigation = _ref3.navigation;\n  return _jsx(Stack.Navigator, {\n    initialRouteName: \"PricingPage\",\n    initialParams: {\n      itemId: userId,\n      userToken: userToken\n    },\n    screenOptions: {\n      headerLeft: function headerLeft() {\n        return _jsx(NavigationDrawerHeader, {\n          navigationProps: navigation\n        });\n      },\n      headerStyle: {\n        backgroundColor: '#307ecc'\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        fontWeight: 'bold'\n      }\n    },\n    children: _jsx(Stack.Screen, {\n      initialParams: {\n        itemId: userId,\n        userToken: userToken\n      },\n      name: \"PricingPage\",\n      component: PricingPage,\n      options: {\n        title: 'Cenník'\n      }\n    })\n  });\n};\n\nvar AdminTrainingPageStack = function AdminTrainingPageStack(_ref4) {\n  var navigation = _ref4.navigation;\n  return _jsx(Stack.Navigator, {\n    initialParams: {\n      itemId: userId,\n      userToken: userToken\n    },\n    initialRouteName: \"AdminTrainingPage\",\n    screenOptions: {\n      headerLeft: function headerLeft() {\n        return _jsx(NavigationDrawerHeader, {\n          navigationProps: navigation\n        });\n      },\n      headerStyle: {\n        backgroundColor: '#307ecc'\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        fontWeight: 'bold'\n      }\n    },\n    children: _jsx(Stack.Screen, {\n      initialParams: {\n        itemId: userId,\n        userToken: userToken\n      },\n      name: \"AdminTrainingPage\",\n      component: AdminTrainingPage,\n      options: {\n        title: 'Tréningy-admin'\n      }\n    })\n  });\n};\n\nvar TrainingsPageStack = function TrainingsPageStack(_ref5) {\n  var navigation = _ref5.navigation;\n  return _jsx(Stack.Navigator, {\n    initialParams: {\n      itemId: userId,\n      userToken: userToken\n    },\n    initialRouteName: \"TrainingsPage\",\n    screenOptions: {\n      headerLeft: function headerLeft() {\n        return _jsx(NavigationDrawerHeader, {\n          navigationProps: navigation\n        });\n      },\n      headerStyle: {\n        backgroundColor: '#307ecc'\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        fontWeight: 'bold'\n      }\n    },\n    children: _jsx(Stack.Screen, {\n      initialParams: {\n        itemId: userId,\n        userToken: userToken\n      },\n      name: \"TrainingsPage\",\n      component: TrainingsPage,\n      options: {\n        title: 'Tréningy'\n      }\n    })\n  });\n};\n\nvar ChangeTrainingPageStack = function ChangeTrainingPageStack(_ref6) {\n  var navigation = _ref6.navigation;\n  return _jsx(Stack.Navigator, {\n    initialRouteName: \"ChangeTrainingPage\",\n    initialParams: {\n      itemId: userId,\n      userToken: userToken\n    },\n    screenOptions: {\n      headerLeft: function headerLeft() {\n        return _jsx(NavigationDrawerHeader, {\n          navigationProps: navigation\n        });\n      },\n      headerStyle: {\n        backgroundColor: '#307ecc'\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        fontWeight: 'bold'\n      }\n    },\n    children: _jsx(Stack.Screen, {\n      name: \"ChangeTrainingPage\",\n      initialParams: {\n        itemId: userId,\n        userToken: userToken\n      },\n      component: ChangeTrainingPage,\n      options: {\n        title: 'Tréningy-zmena'\n      }\n    })\n  });\n};\n\nvar AddTrainingPageStack = function AddTrainingPageStack(_ref7) {\n  var navigation = _ref7.navigation;\n  return _jsx(Stack.Navigator, {\n    initialRouteName: \"AddTrainingPage\",\n    initialParams: {\n      itemId: userId,\n      userToken: userToken\n    },\n    screenOptions: {\n      headerLeft: function headerLeft() {\n        return _jsx(NavigationDrawerHeader, {\n          navigationProps: navigation\n        });\n      },\n      headerStyle: {\n        backgroundColor: '#307ecc'\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        fontWeight: 'bold'\n      }\n    },\n    children: _jsx(Stack.Screen, {\n      name: \"AddTrainingPage\",\n      initialParams: {\n        itemId: userId,\n        userToken: userToken\n      },\n      component: AddTrainingPage,\n      options: {\n        title: 'Tréningy-pridanie'\n      }\n    })\n  });\n};\n\nvar userId = 0;\nvar userToken = '';\n\nvar DrawerNavigationPage = function DrawerNavigationPage(_ref8) {\n  var route = _ref8.route,\n      navigation = _ref8.navigation;\n  userId = route.params;\n  userToken = route.params;\n  console.log(route);\n  console.log(route);\n  console.log(route);\n  console.log(route);\n  console.log(route);\n  console.log(route);\n  console.log(userId);\n  console.log(userToken);\n  return _jsxs(Drawer.Navigator, {\n    screenOptions: {\n      activeTintColor: '#cee1f2',\n      color: '#cee1f2',\n      itemStyle: {\n        marginVertical: 5,\n        color: 'white'\n      },\n      labelStyle: {\n        color: '#d8d8d8'\n      },\n      headerShown: false\n    },\n    drawerContent: CustomSidebarMenu,\n    children: [_jsx(Drawer.Screen, {\n      name: \"ContactPageStack\",\n      options: {\n        drawerLabel: 'Kontakt'\n      },\n      component: ContactPageStack\n    }), _jsx(Drawer.Screen, {\n      name: \"PricingPageStack\",\n      options: {\n        drawerLabel: 'Cenník'\n      },\n      component: PricingPageStack\n    }), _jsx(Drawer.Screen, {\n      name: \"AdminTrainingPageStack\",\n      options: {\n        drawerLabel: 'Treningy-admin'\n      },\n      component: AdminTrainingPageStack\n    }), _jsx(Drawer.Screen, {\n      name: \"CoachPageStack\",\n      options: {\n        drawerLabel: 'Trenéri'\n      },\n      component: CoachPageStack\n    }), _jsx(Drawer.Screen, {\n      name: \"TrainingsPageStack\",\n      options: {\n        drawerLabel: 'Tréningy'\n      },\n      component: TrainingsPageStack\n    }), _jsx(Drawer.Screen, {\n      name: \"ChangeTrainingPageStack\",\n      options: {\n        drawerLabel: 'Zmena tréningov'\n      },\n      component: ChangeTrainingPageStack\n    }), _jsx(Drawer.Screen, {\n      name: \"AddTrainingPageStack\",\n      options: {\n        drawerLabel: 'Pridanie tréningu'\n      },\n      component: AddTrainingPageStack\n    })]\n  });\n};\n\nexport default DrawerNavigationPage;","map":{"version":3,"sources":["/Users/timotejsmolen/WebstormProjects/untitled2/src/screens/DrawerNavigationPage.js"],"names":["React","createStackNavigator","createDrawerNavigator","ContactPage","CoachPage","PricingPage","AdminTrainingPage","TrainingsPage","ChangeTrainingPage","AddTrainingPage","CustomSidebarMenu","NavigationDrawerHeader","Stack","Drawer","CoachPageStack","navigation","itemId","userId","userToken","title","headerLeft","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","ContactPageStack","PricingPageStack","AdminTrainingPageStack","TrainingsPageStack","ChangeTrainingPageStack","AddTrainingPageStack","DrawerNavigationPage","route","params","console","log","activeTintColor","color","itemStyle","marginVertical","labelStyle","headerShown","drawerLabel"],"mappings":"AAGA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,SAAQC,oBAAR,QAAmC,yBAAnC;AACA,SAAQC,qBAAR,QAAoC,0BAApC;AAGA,OAAOC,WAAP;AACA,OAAOC,SAAP;AACA,OAAOC,WAAP;AACA,OAAOC,iBAAP;AACA,OAAOC,aAAP;AACA,OAAOC,kBAAP;AACA,OAAOC,eAAP;AACA,OAAOC,iBAAP;AACA,OAAOC,sBAAP;;;AACA,IAAMC,KAAK,GAAGX,oBAAoB,EAAlC;AACA,IAAMY,MAAM,GAAGX,qBAAqB,EAApC;;AAEA,IAAMY,cAAc,GAAG,SAAjBA,cAAiB,OAAkB;AAAA,MAAhBC,UAAgB,QAAhBA,UAAgB;AACvC,SACE,KAAC,KAAD,CAAO,SAAP;AAAiB,IAAA,gBAAgB,EAAC,WAAlC;AAAA,cACE,KAAC,KAAD,CAAO,MAAP;AACE,MAAA,IAAI,EAAC,WADP;AAEE,MAAA,aAAa,EAAE;AAAEC,QAAAA,MAAM,EAAEC,MAAV;AAAkBC,QAAAA,SAAS,EAACA;AAA5B,OAFjB;AAGE,MAAA,SAAS,EAAEd,SAHb;AAIE,MAAA,OAAO,EAAE;AACPe,QAAAA,KAAK,EAAE,OADA;AAEPC,QAAAA,UAAU,EAAE;AAAA,iBACV,KAAC,sBAAD;AAAwB,YAAA,eAAe,EAAEL;AAAzC,YADU;AAAA,SAFL;AAKPM,QAAAA,WAAW,EAAE;AACXC,UAAAA,eAAe,EAAE;AADN,SALN;AAQPC,QAAAA,eAAe,EAAE,MARV;AASPC,QAAAA,gBAAgB,EAAE;AAChBC,UAAAA,UAAU,EAAE;AADI;AATX;AAJX;AADF,IADF;AAsBD,CAvBD;;AAyBA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,QAAkB;AAAA,MAAhBX,UAAgB,SAAhBA,UAAgB;AACzC,SACE,KAAC,KAAD,CAAO,SAAP;AACE,IAAA,gBAAgB,EAAC,aADnB;AAEE,IAAA,aAAa,EAAE;AAAEC,MAAAA,MAAM,EAAEC,MAAV;AAAkBC,MAAAA,SAAS,EAACA;AAA5B,KAFjB;AAGE,IAAA,aAAa,EAAE;AACbE,MAAAA,UAAU,EAAE;AAAA,eACV,KAAC,sBAAD;AAAwB,UAAA,eAAe,EAAEL;AAAzC,UADU;AAAA,OADC;AAIbM,MAAAA,WAAW,EAAE;AACXC,QAAAA,eAAe,EAAE;AADN,OAJA;AAObC,MAAAA,eAAe,EAAE,MAPJ;AAQbC,MAAAA,gBAAgB,EAAE;AAChBC,QAAAA,UAAU,EAAE;AADI;AARL,KAHjB;AAAA,cAeE,KAAC,KAAD,CAAO,MAAP;AACC,MAAA,aAAa,EAAE;AAAET,QAAAA,MAAM,EAAEC,MAAV;AAAkBC,QAAAA,SAAS,EAACA;AAA5B,OADhB;AAEE,MAAA,IAAI,EAAC,aAFP;AAGE,MAAA,SAAS,EAAEf,WAHb;AAKE,MAAA,OAAO,EAAE;AACPgB,QAAAA,KAAK,EAAE;AADA;AALX;AAfF,IADF;AA2BD,CA5BD;;AA6BA,IAAMQ,gBAAgB,GAAG,SAAnBA,gBAAmB,QAAkB;AAAA,MAAhBZ,UAAgB,SAAhBA,UAAgB;AACzC,SACE,KAAC,KAAD,CAAO,SAAP;AACE,IAAA,gBAAgB,EAAC,aADnB;AAEE,IAAA,aAAa,EAAE;AAAEC,MAAAA,MAAM,EAAEC,MAAV;AAAkBC,MAAAA,SAAS,EAACA;AAA5B,KAFjB;AAGE,IAAA,aAAa,EAAE;AACbE,MAAAA,UAAU,EAAE;AAAA,eACV,KAAC,sBAAD;AAAwB,UAAA,eAAe,EAAEL;AAAzC,UADU;AAAA,OADC;AAIbM,MAAAA,WAAW,EAAE;AACXC,QAAAA,eAAe,EAAE;AADN,OAJA;AAObC,MAAAA,eAAe,EAAE,MAPJ;AAQbC,MAAAA,gBAAgB,EAAE;AAChBC,QAAAA,UAAU,EAAE;AADI;AARL,KAHjB;AAAA,cAeE,KAAC,KAAD,CAAO,MAAP;AACG,MAAA,aAAa,EAAE;AAAET,QAAAA,MAAM,EAAEC,MAAV;AAAkBC,QAAAA,SAAS,EAACA;AAA5B,OADlB;AAEE,MAAA,IAAI,EAAC,aAFP;AAGE,MAAA,SAAS,EAAEb,WAHb;AAIE,MAAA,OAAO,EAAE;AACPc,QAAAA,KAAK,EAAE;AADA;AAJX;AAfF,IADF;AA0BD,CA3BD;;AA4BA,IAAMS,sBAAsB,GAAG,SAAzBA,sBAAyB,QAAkB;AAAA,MAAhBb,UAAgB,SAAhBA,UAAgB;AAC/C,SACE,KAAC,KAAD,CAAO,SAAP;AACA,IAAA,aAAa,EAAE;AAAEC,MAAAA,MAAM,EAAEC,MAAV;AAAkBC,MAAAA,SAAS,EAACA;AAA5B,KADf;AAEE,IAAA,gBAAgB,EAAC,mBAFnB;AAGE,IAAA,aAAa,EAAE;AACbE,MAAAA,UAAU,EAAE;AAAA,eACV,KAAC,sBAAD;AAAwB,UAAA,eAAe,EAAEL;AAAzC,UADU;AAAA,OADC;AAIbM,MAAAA,WAAW,EAAE;AACXC,QAAAA,eAAe,EAAE;AADN,OAJA;AAObC,MAAAA,eAAe,EAAE,MAPJ;AAQbC,MAAAA,gBAAgB,EAAE;AAChBC,QAAAA,UAAU,EAAE;AADI;AARL,KAHjB;AAAA,cAeE,KAAC,KAAD,CAAO,MAAP;AACG,MAAA,aAAa,EAAE;AAAET,QAAAA,MAAM,EAAEC,MAAV;AAAkBC,QAAAA,SAAS,EAACA;AAA5B,OADlB;AAEE,MAAA,IAAI,EAAC,mBAFP;AAGE,MAAA,SAAS,EAAEZ,iBAHb;AAIE,MAAA,OAAO,EAAE;AACPa,QAAAA,KAAK,EAAE;AADA;AAJX;AAfF,IADF;AA0BD,CA3BD;;AA4BA,IAAMU,kBAAkB,GAAG,SAArBA,kBAAqB,QAAkB;AAAA,MAAhBd,UAAgB,SAAhBA,UAAgB;AAC3C,SACE,KAAC,KAAD,CAAO,SAAP;AACA,IAAA,aAAa,EAAE;AAAEC,MAAAA,MAAM,EAAEC,MAAV;AAAkBC,MAAAA,SAAS,EAACA;AAA5B,KADf;AAEE,IAAA,gBAAgB,EAAC,eAFnB;AAGE,IAAA,aAAa,EAAE;AACbE,MAAAA,UAAU,EAAE;AAAA,eACV,KAAC,sBAAD;AAAwB,UAAA,eAAe,EAAEL;AAAzC,UADU;AAAA,OADC;AAIbM,MAAAA,WAAW,EAAE;AACXC,QAAAA,eAAe,EAAE;AADN,OAJA;AAObC,MAAAA,eAAe,EAAE,MAPJ;AAQbC,MAAAA,gBAAgB,EAAE;AAChBC,QAAAA,UAAU,EAAE;AADI;AARL,KAHjB;AAAA,cAeE,KAAC,KAAD,CAAO,MAAP;AACG,MAAA,aAAa,EAAE;AAAET,QAAAA,MAAM,EAAEC,MAAV;AAAkBC,QAAAA,SAAS,EAACA;AAA5B,OADlB;AAEE,MAAA,IAAI,EAAC,eAFP;AAGE,MAAA,SAAS,EAAEX,aAHb;AAIE,MAAA,OAAO,EAAE;AACPY,QAAAA,KAAK,EAAE;AADA;AAJX;AAfF,IADF;AA0BD,CA3BD;;AA4BA,IAAMW,uBAAuB,GAAG,SAA1BA,uBAA0B,QAAkB;AAAA,MAAhBf,UAAgB,SAAhBA,UAAgB;AAChD,SACE,KAAC,KAAD,CAAO,SAAP;AACE,IAAA,gBAAgB,EAAC,oBADnB;AAEE,IAAA,aAAa,EAAE;AAAEC,MAAAA,MAAM,EAAEC,MAAV;AAAkBC,MAAAA,SAAS,EAACA;AAA5B,KAFjB;AAGE,IAAA,aAAa,EAAE;AACbE,MAAAA,UAAU,EAAE;AAAA,eACV,KAAC,sBAAD;AAAwB,UAAA,eAAe,EAAEL;AAAzC,UADU;AAAA,OADC;AAIbM,MAAAA,WAAW,EAAE;AACXC,QAAAA,eAAe,EAAE;AADN,OAJA;AAObC,MAAAA,eAAe,EAAE,MAPJ;AAQbC,MAAAA,gBAAgB,EAAE;AAChBC,QAAAA,UAAU,EAAE;AADI;AARL,KAHjB;AAAA,cAeE,KAAC,KAAD,CAAO,MAAP;AACE,MAAA,IAAI,EAAC,oBADP;AAEE,MAAA,aAAa,EAAE;AAAET,QAAAA,MAAM,EAAEC,MAAV;AAAkBC,QAAAA,SAAS,EAACA;AAA5B,OAFjB;AAGE,MAAA,SAAS,EAAEV,kBAHb;AAIE,MAAA,OAAO,EAAE;AACPW,QAAAA,KAAK,EAAE;AADA;AAJX;AAfF,IADF;AA0BD,CA3BD;;AA4BA,IAAMY,oBAAoB,GAAG,SAAvBA,oBAAuB,QAAkB;AAAA,MAAhBhB,UAAgB,SAAhBA,UAAgB;AAC7C,SACE,KAAC,KAAD,CAAO,SAAP;AACE,IAAA,gBAAgB,EAAC,iBADnB;AAEE,IAAA,aAAa,EAAE;AAAEC,MAAAA,MAAM,EAAEC,MAAV;AAAkBC,MAAAA,SAAS,EAACA;AAA5B,KAFjB;AAGE,IAAA,aAAa,EAAE;AACbE,MAAAA,UAAU,EAAE;AAAA,eACV,KAAC,sBAAD;AAAwB,UAAA,eAAe,EAAEL;AAAzC,UADU;AAAA,OADC;AAIbM,MAAAA,WAAW,EAAE;AACXC,QAAAA,eAAe,EAAE;AADN,OAJA;AAObC,MAAAA,eAAe,EAAE,MAPJ;AAQbC,MAAAA,gBAAgB,EAAE;AAChBC,QAAAA,UAAU,EAAE;AADI;AARL,KAHjB;AAAA,cAeE,KAAC,KAAD,CAAO,MAAP;AACE,MAAA,IAAI,EAAC,iBADP;AAEE,MAAA,aAAa,EAAE;AAAET,QAAAA,MAAM,EAAEC,MAAV;AAAkBC,QAAAA,SAAS,EAACA;AAA5B,OAFjB;AAGE,MAAA,SAAS,EAAET,eAHb;AAIE,MAAA,OAAO,EAAE;AACPU,QAAAA,KAAK,EAAE;AADA;AAJX;AAfF,IADF;AA0BD,CA3BD;;AA4BA,IAAIF,MAAM,GAAE,CAAZ;AACA,IAAIC,SAAS,GAAE,EAAf;;AACA,IAAMc,oBAAoB,GAAG,SAAvBA,oBAAuB,QAAwB;AAAA,MAAtBC,KAAsB,SAAtBA,KAAsB;AAAA,MAAhBlB,UAAgB,SAAhBA,UAAgB;AACnDE,EAAAA,MAAM,GAAIgB,KAAK,CAACC,MAAhB;AACAhB,EAAAA,SAAS,GAAIe,KAAK,CAACC,MAAnB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYnB,MAAZ;AACAkB,EAAAA,OAAO,CAACC,GAAR,CAAYlB,SAAZ;AAEA,SACE,MAAC,MAAD,CAAQ,SAAR;AACA,IAAA,aAAa,EAAE;AACXmB,MAAAA,eAAe,EAAE,SADN;AAEXC,MAAAA,KAAK,EAAE,SAFI;AAGXC,MAAAA,SAAS,EAAE;AAACC,QAAAA,cAAc,EAAE,CAAjB;AAAoBF,QAAAA,KAAK,EAAE;AAA3B,OAHA;AAIXG,MAAAA,UAAU,EAAE;AACVH,QAAAA,KAAK,EAAE;AADG,OAJD;AAOXI,MAAAA,WAAW,EAAE;AAPF,KADf;AAWE,IAAA,aAAa,EAAEhC,iBAXjB;AAAA,eAYE,KAAC,MAAD,CAAQ,MAAR;AAEE,MAAA,IAAI,EAAC,kBAFP;AAGE,MAAA,OAAO,EAAE;AAACiC,QAAAA,WAAW,EAAE;AAAd,OAHX;AAIE,MAAA,SAAS,EAAEjB;AAJb,MAZF,EAoBE,KAAC,MAAD,CAAQ,MAAR;AACE,MAAA,IAAI,EAAC,kBADP;AAEE,MAAA,OAAO,EAAE;AAACiB,QAAAA,WAAW,EAAE;AAAd,OAFX;AAGE,MAAA,SAAS,EAAEhB;AAHb,MApBF,EAyBE,KAAC,MAAD,CAAQ,MAAR;AACE,MAAA,IAAI,EAAC,wBADP;AAEE,MAAA,OAAO,EAAE;AAACgB,QAAAA,WAAW,EAAE;AAAd,OAFX;AAGE,MAAA,SAAS,EAAEf;AAHb,MAzBF,EA8BE,KAAC,MAAD,CAAQ,MAAR;AACE,MAAA,IAAI,EAAC,gBADP;AAEE,MAAA,OAAO,EAAE;AAACe,QAAAA,WAAW,EAAE;AAAd,OAFX;AAGE,MAAA,SAAS,EAAE7B;AAHb,MA9BF,EAmCE,KAAC,MAAD,CAAQ,MAAR;AACE,MAAA,IAAI,EAAC,oBADP;AAEE,MAAA,OAAO,EAAE;AAAC6B,QAAAA,WAAW,EAAE;AAAd,OAFX;AAGE,MAAA,SAAS,EAAEd;AAHb,MAnCF,EAwCE,KAAC,MAAD,CAAQ,MAAR;AACE,MAAA,IAAI,EAAC,yBADP;AAEE,MAAA,OAAO,EAAE;AAACc,QAAAA,WAAW,EAAE;AAAd,OAFX;AAGE,MAAA,SAAS,EAAEb;AAHb,MAxCF,EA6CE,KAAC,MAAD,CAAQ,MAAR;AACE,MAAA,IAAI,EAAC,sBADP;AAEE,MAAA,OAAO,EAAE;AAACa,QAAAA,WAAW,EAAE;AAAd,OAFX;AAGE,MAAA,SAAS,EAAEZ;AAHb,MA7CF;AAAA,IADF;AAsDD,CAlED;;AAoEA,eAAeC,oBAAf","sourcesContent":["\n\n// Import React\nimport React from 'react';\n\n// Import Navigators from React Navigation\nimport {createStackNavigator} from '@react-navigation/stack';\nimport {createDrawerNavigator} from '@react-navigation/drawer';\n\n// Import Screens\nimport ContactPage from \"./ContactPage\";\nimport CoachPage from \"./CoachPage\";\nimport PricingPage from \"./PricingPage\";\nimport AdminTrainingPage from \"./AdminTrainingPage\";\nimport TrainingsPage from \"./TrainingsPage\";\nimport ChangeTrainingPage from \"./ChangeTrainingPage\";\nimport AddTrainingPage from \"./AddTrainingPage\";\nimport CustomSidebarMenu from '../components/CustomSidebarMenu';\nimport NavigationDrawerHeader from '../components/NavigationDrawerHeader';\nconst Stack = createStackNavigator();\nconst Drawer = createDrawerNavigator();\n\nconst CoachPageStack = ({navigation}) => {\n  return (\n    <Stack.Navigator initialRouteName=\"CoachPage\">\n      <Stack.Screen\n        name=\"CoachPage\"\n        initialParams={{ itemId: userId ,userToken:userToken  }}\n        component={CoachPage}\n        options={{\n          title: 'O nás', \n          headerLeft: () => (\n            <NavigationDrawerHeader navigationProps={navigation} />\n          ),\n          headerStyle: {\n            backgroundColor: '#307ecc', \n          },\n          headerTintColor: '#fff', \n          headerTitleStyle: {\n            fontWeight: 'bold', \n          },\n        }}\n      />\n    </Stack.Navigator>\n  );\n};\n\nconst ContactPageStack = ({navigation}) => {\n  return (\n    <Stack.Navigator\n      initialRouteName=\"ContactPage\"\n      initialParams={{ itemId: userId ,userToken:userToken  }}\n      screenOptions={{\n        headerLeft: () => (\n          <NavigationDrawerHeader navigationProps={navigation} />\n        ),\n        headerStyle: {\n          backgroundColor: '#307ecc', \n        },\n        headerTintColor: '#fff', \n        headerTitleStyle: {\n          fontWeight: 'bold', \n        },\n      }}>\n      <Stack.Screen\n       initialParams={{ itemId: userId ,userToken:userToken  }}\n        name=\"ContactPage\"\n        component={ContactPage}\n       \n        options={{\n          title: 'Kontakt'\n        }}\n      />\n    </Stack.Navigator>\n  );\n};\nconst PricingPageStack = ({navigation}) => {\n  return (\n    <Stack.Navigator\n      initialRouteName=\"PricingPage\"\n      initialParams={{ itemId: userId ,userToken:userToken  }}\n      screenOptions={{\n        headerLeft: () => (\n          <NavigationDrawerHeader navigationProps={navigation} />\n        ),\n        headerStyle: {\n          backgroundColor: '#307ecc',\n        },\n        headerTintColor: '#fff', \n        headerTitleStyle: {\n          fontWeight: 'bold', \n        },\n      }}>\n      <Stack.Screen\n         initialParams={{ itemId: userId ,userToken:userToken  }}\n        name=\"PricingPage\"\n        component={PricingPage}\n        options={{\n          title: 'Cenník', \n        }}\n      />\n    </Stack.Navigator>\n  );\n};\nconst AdminTrainingPageStack = ({navigation}) => {\n  return (\n    <Stack.Navigator\n    initialParams={{ itemId: userId ,userToken:userToken  }}\n      initialRouteName=\"AdminTrainingPage\"\n      screenOptions={{\n        headerLeft: () => (\n          <NavigationDrawerHeader navigationProps={navigation} />\n        ),\n        headerStyle: {\n          backgroundColor: '#307ecc', \n        },\n        headerTintColor: '#fff', \n        headerTitleStyle: {\n          fontWeight: 'bold', \n        },\n      }}>\n      <Stack.Screen\n         initialParams={{ itemId: userId ,userToken:userToken  }}\n        name=\"AdminTrainingPage\"\n        component={AdminTrainingPage}\n        options={{\n          title: 'Tréningy-admin', \n        }}\n      />\n    </Stack.Navigator>\n  );\n};\nconst TrainingsPageStack = ({navigation}) => {\n  return (\n    <Stack.Navigator\n    initialParams={{ itemId: userId ,userToken:userToken  }}\n      initialRouteName=\"TrainingsPage\"\n      screenOptions={{\n        headerLeft: () => (\n          <NavigationDrawerHeader navigationProps={navigation} />\n        ),\n        headerStyle: {\n          backgroundColor: '#307ecc', \n        },\n        headerTintColor: '#fff', \n        headerTitleStyle: {\n          fontWeight: 'bold', \n        },\n      }}>\n      <Stack.Screen\n         initialParams={{ itemId: userId ,userToken:userToken  }}\n        name=\"TrainingsPage\"\n        component={TrainingsPage}\n        options={{\n          title: 'Tréningy', \n        }}\n      />\n    </Stack.Navigator>\n  );\n};\nconst ChangeTrainingPageStack = ({navigation}) => {\n  return (\n    <Stack.Navigator\n      initialRouteName=\"ChangeTrainingPage\"\n      initialParams={{ itemId: userId ,userToken:userToken  }}\n      screenOptions={{\n        headerLeft: () => (\n          <NavigationDrawerHeader navigationProps={navigation} />\n        ),\n        headerStyle: {\n          backgroundColor: '#307ecc', \n        },\n        headerTintColor: '#fff', \n        headerTitleStyle: {\n          fontWeight: 'bold', \n        },\n      }}>\n      <Stack.Screen\n        name=\"ChangeTrainingPage\"\n        initialParams={{ itemId: userId ,userToken:userToken  }}\n        component={ChangeTrainingPage}\n        options={{\n          title: 'Tréningy-zmena', \n        }}\n      />\n    </Stack.Navigator>\n  );\n};\nconst AddTrainingPageStack = ({navigation}) => {\n  return (\n    <Stack.Navigator\n      initialRouteName=\"AddTrainingPage\"\n      initialParams={{ itemId: userId ,userToken:userToken  }}\n      screenOptions={{\n        headerLeft: () => (\n          <NavigationDrawerHeader navigationProps={navigation} />\n        ),\n        headerStyle: {\n          backgroundColor: '#307ecc', \n        },\n        headerTintColor: '#fff', \n        headerTitleStyle: {\n          fontWeight: 'bold', \n        },\n      }}>\n      <Stack.Screen\n        name=\"AddTrainingPage\"\n        initialParams={{ itemId: userId ,userToken:userToken  }}\n        component={AddTrainingPage}\n        options={{\n          title: 'Tréningy-pridanie', \n        }}\n      />\n    </Stack.Navigator>\n  );\n};\nlet userId =0\nlet userToken =''\nconst DrawerNavigationPage = ({route,navigation}) => {\n  userId  = route.params;\n  userToken  = route.params;\n  console.log(route)\n  console.log(route)\n  console.log(route)\n  console.log(route)\n  console.log(route)\n  console.log(route)\n  console.log(userId )\n  console.log(userToken )\n\n  return (\n    <Drawer.Navigator\n    screenOptions={{\n        activeTintColor: '#cee1f2',\n        color: '#cee1f2',\n        itemStyle: {marginVertical: 5, color: 'white'},\n        labelStyle: {\n          color: '#d8d8d8',\n        },\n        headerShown: false\n      }}\n      \n      drawerContent={CustomSidebarMenu}>\n      <Drawer.Screen\n        \n        name=\"ContactPageStack\"\n        options={{drawerLabel: 'Kontakt'}}\n        component={ContactPageStack}\n        \n\n      />\n      <Drawer.Screen\n        name=\"PricingPageStack\"\n        options={{drawerLabel: 'Cenník'}}\n        component={PricingPageStack}\n      />\n      <Drawer.Screen\n        name=\"AdminTrainingPageStack\"\n        options={{drawerLabel: 'Treningy-admin'}}\n        component={AdminTrainingPageStack}\n      />\n      <Drawer.Screen\n        name=\"CoachPageStack\"\n        options={{drawerLabel: 'Trenéri'}}\n        component={CoachPageStack}\n      />\n      <Drawer.Screen\n        name=\"TrainingsPageStack\"\n        options={{drawerLabel: 'Tréningy'}}\n        component={TrainingsPageStack}\n      />\n      <Drawer.Screen\n        name=\"ChangeTrainingPageStack\"\n        options={{drawerLabel: 'Zmena tréningov'}}\n        component={ChangeTrainingPageStack}\n      />\n      <Drawer.Screen\n        name=\"AddTrainingPageStack\"\n        options={{drawerLabel: 'Pridanie tréningu'}}\n        component={AddTrainingPageStack}\n      />\n      \n    </Drawer.Navigator>\n  );\n};\n\nexport default DrawerNavigationPage;"]},"metadata":{},"sourceType":"module"}